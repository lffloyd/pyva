Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GEQTHAN
    GTHAN
    LEQTHAN

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main conj_classes
Rule 2     main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY
Rule 3     conj_classes -> empty
Rule 4     conj_classes -> conj_classes classe
Rule 5     classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY
Rule 6     extension -> empty
Rule 7     extension -> EXTENDS ID
Rule 8     conj_var -> empty
Rule 9     conj_var -> conj_var var
Rule 10    conj_metodos -> empty
Rule 11    conj_metodos -> conj_metodos metodo
Rule 12    var -> tipo ID SEMICOLON
Rule 13    metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
Rule 14    conj_cmd -> empty
Rule 15    conj_cmd -> conj_cmd cmd1
Rule 16    params -> empty
Rule 17    params -> conj_params
Rule 18    conj_params -> tipo ID mais_param
Rule 19    mais_param -> empty
Rule 20    mais_param -> mais_param COLON tipo ID
Rule 21    tipo -> INT LBRACKET RBRACKET
Rule 22    tipo -> BOOLEAN
Rule 23    tipo -> INT
Rule 24    tipo -> ID
Rule 25    cmd1 -> LKEY conj_cmd RKEY
Rule 26    cmd1 -> IF LPAREN exp RPAREN cmd1
Rule 27    cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1
Rule 28    cmd1 -> WHILE LPAREN exp RPAREN cmd1
Rule 29    cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
Rule 30    cmd1 -> ID ATTR exp SEMICOLON
Rule 31    cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
Rule 32    cmd2 -> LKEY conj_cmd RKEY
Rule 33    cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2
Rule 34    cmd2 -> WHILE LPAREN exp RPAREN cmd2
Rule 35    cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
Rule 36    cmd2 -> ID ATTR exp SEMICOLON
Rule 37    cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
Rule 38    exp -> exp AND rexp
Rule 39    exp -> rexp
Rule 40    rexp -> rexp LTHAN aexp
Rule 41    rexp -> rexp EQUALS aexp
Rule 42    rexp -> rexp NEQUALS aexp
Rule 43    rexp -> aexp
Rule 44    aexp -> aexp PLUS mexp
Rule 45    aexp -> aexp MINUS mexp
Rule 46    aexp -> mexp
Rule 47    mexp -> mexp TIMES sexp
Rule 48    mexp -> sexp
Rule 49    sexp -> NOT sexp
Rule 50    sexp -> MINUS sexp
Rule 51    sexp -> TRUE
Rule 52    sexp -> FALSE
Rule 53    sexp -> NUMBER
Rule 54    sexp -> NULL
Rule 55    sexp -> NEW INT LBRACKET exp RBRACKET
Rule 56    sexp -> pexp DOT LENGTH
Rule 57    sexp -> pexp LBRACKET exp RBRACKET
Rule 58    sexp -> pexp
Rule 59    pexp -> ID
Rule 60    pexp -> THIS
Rule 61    pexp -> LPAREN exp RPAREN
Rule 62    pexp -> NEW ID LPAREN RPAREN
Rule 63    pexp -> pexp DOT ID
Rule 64    pexp -> pexp DOT ID LPAREN option_exps RPAREN
Rule 65    option_exps -> empty
Rule 66    option_exps -> exp
Rule 67    exps -> exp conj_exps
Rule 68    conj_exps -> empty
Rule 69    conj_exps -> conj_exps COLON exp
Rule 70    empty -> <empty>

Terminals, with rules where they appear

AND                  : 38
ATTR                 : 30 31 36 37
BOOLEAN              : 22
CLASS                : 2 5
COLON                : 20 69
DOT                  : 56 63 64
ELSE                 : 27 33
EQUALS               : 41
EXTENDS              : 7
FALSE                : 52
GEQTHAN              : 
GTHAN                : 
ID                   : 2 2 5 7 12 13 18 20 24 30 31 36 37 59 62 63 64
IF                   : 26 27 33
INT                  : 21 23 55
LBRACKET             : 2 21 31 37 55 57
LENGTH               : 56
LEQTHAN              : 
LKEY                 : 2 2 5 13 25 32
LPAREN               : 2 13 26 27 28 29 33 34 35 61 62 64
LTHAN                : 40
MAIN                 : 2
MINUS                : 45 50
NEQUALS              : 42
NEW                  : 55 62
NOT                  : 49
NULL                 : 54
NUMBER               : 53
PLUS                 : 44
PUBLIC               : 2 13
RBRACKET             : 2 21 31 37 55 57
RETURN               : 13
RKEY                 : 2 2 5 13 25 32
RPAREN               : 2 13 26 27 28 29 33 34 35 61 62 64
SEMICOLON            : 12 13 29 30 31 35 36 37
STATIC               : 2
STRING               : 2
SYSTEMOUTPRINTLN     : 29 35
THIS                 : 60
TIMES                : 47
TRUE                 : 51
VOID                 : 2
WHILE                : 28 34
error                : 

Nonterminals, with rules where they appear

aexp                 : 40 41 42 43 44 45
classe               : 4
cmd1                 : 2 15 26 27 28
cmd2                 : 27 33 33 34
conj_classes         : 1 4
conj_cmd             : 13 15 25 32
conj_exps            : 67 69
conj_metodos         : 5 11
conj_params          : 17
conj_var             : 5 9 13
empty                : 3 6 8 10 14 16 19 65 68
exp                  : 13 26 27 28 29 30 31 31 33 34 35 36 37 37 38 55 57 61 66 67 69
exps                 : 
extension            : 5
main                 : 1
mais_param           : 18 20
metodo               : 11
mexp                 : 44 45 46 47
option_exps          : 64
params               : 13
pexp                 : 56 57 58 63 64
prog                 : 0
rexp                 : 38 39 40 41 42
sexp                 : 47 48 49 50
tipo                 : 12 13 18 20
var                  : 9

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . main conj_classes
    (2) main -> . CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    CLASS           shift and go to state 3

    prog                           shift and go to state 1
    main                           shift and go to state 2

state 1

    (0) S' -> prog .



state 2

    (1) prog -> main . conj_classes
    (3) conj_classes -> . empty
    (4) conj_classes -> . conj_classes classe
    (70) empty -> .

    CLASS           reduce using rule 70 (empty -> .)
    $end            reduce using rule 70 (empty -> .)

    conj_classes                   shift and go to state 4
    empty                          shift and go to state 5

state 3

    (2) main -> CLASS . ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    ID              shift and go to state 6


state 4

    (1) prog -> main conj_classes .
    (4) conj_classes -> conj_classes . classe
    (5) classe -> . CLASS ID extension LKEY conj_var conj_metodos RKEY

    $end            reduce using rule 1 (prog -> main conj_classes .)
    CLASS           shift and go to state 8

    classe                         shift and go to state 7

state 5

    (3) conj_classes -> empty .

    CLASS           reduce using rule 3 (conj_classes -> empty .)
    $end            reduce using rule 3 (conj_classes -> empty .)


state 6

    (2) main -> CLASS ID . LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LKEY            shift and go to state 9


state 7

    (4) conj_classes -> conj_classes classe .

    CLASS           reduce using rule 4 (conj_classes -> conj_classes classe .)
    $end            reduce using rule 4 (conj_classes -> conj_classes classe .)


state 8

    (5) classe -> CLASS . ID extension LKEY conj_var conj_metodos RKEY

    ID              shift and go to state 10


state 9

    (2) main -> CLASS ID LKEY . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    PUBLIC          shift and go to state 11


state 10

    (5) classe -> CLASS ID . extension LKEY conj_var conj_metodos RKEY
    (6) extension -> . empty
    (7) extension -> . EXTENDS ID
    (70) empty -> .

    EXTENDS         shift and go to state 14
    LKEY            reduce using rule 70 (empty -> .)

    extension                      shift and go to state 12
    empty                          shift and go to state 13

state 11

    (2) main -> CLASS ID LKEY PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    STATIC          shift and go to state 15


state 12

    (5) classe -> CLASS ID extension . LKEY conj_var conj_metodos RKEY

    LKEY            shift and go to state 16


state 13

    (6) extension -> empty .

    LKEY            reduce using rule 6 (extension -> empty .)


state 14

    (7) extension -> EXTENDS . ID

    ID              shift and go to state 17


state 15

    (2) main -> CLASS ID LKEY PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    VOID            shift and go to state 18


state 16

    (5) classe -> CLASS ID extension LKEY . conj_var conj_metodos RKEY
    (8) conj_var -> . empty
    (9) conj_var -> . conj_var var
    (70) empty -> .

    INT             reduce using rule 70 (empty -> .)
    BOOLEAN         reduce using rule 70 (empty -> .)
    ID              reduce using rule 70 (empty -> .)
    RKEY            reduce using rule 70 (empty -> .)
    PUBLIC          reduce using rule 70 (empty -> .)

    conj_var                       shift and go to state 19
    empty                          shift and go to state 20

state 17

    (7) extension -> EXTENDS ID .

    LKEY            reduce using rule 7 (extension -> EXTENDS ID .)


state 18

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    MAIN            shift and go to state 21


state 19

    (5) classe -> CLASS ID extension LKEY conj_var . conj_metodos RKEY
    (9) conj_var -> conj_var . var
    (10) conj_metodos -> . empty
    (11) conj_metodos -> . conj_metodos metodo
    (12) var -> . tipo ID SEMICOLON
    (70) empty -> .
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    RKEY            reduce using rule 70 (empty -> .)
    PUBLIC          reduce using rule 70 (empty -> .)
    INT             shift and go to state 27
    BOOLEAN         shift and go to state 28
    ID              shift and go to state 22

    conj_metodos                   shift and go to state 23
    var                            shift and go to state 24
    empty                          shift and go to state 25
    tipo                           shift and go to state 26

state 20

    (8) conj_var -> empty .

    INT             reduce using rule 8 (conj_var -> empty .)
    BOOLEAN         reduce using rule 8 (conj_var -> empty .)
    ID              reduce using rule 8 (conj_var -> empty .)
    RKEY            reduce using rule 8 (conj_var -> empty .)
    PUBLIC          reduce using rule 8 (conj_var -> empty .)
    RETURN          reduce using rule 8 (conj_var -> empty .)
    LKEY            reduce using rule 8 (conj_var -> empty .)
    IF              reduce using rule 8 (conj_var -> empty .)
    WHILE           reduce using rule 8 (conj_var -> empty .)
    SYSTEMOUTPRINTLN reduce using rule 8 (conj_var -> empty .)


state 21

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LPAREN          shift and go to state 29


state 22

    (24) tipo -> ID .

    ID              reduce using rule 24 (tipo -> ID .)


state 23

    (5) classe -> CLASS ID extension LKEY conj_var conj_metodos . RKEY
    (11) conj_metodos -> conj_metodos . metodo
    (13) metodo -> . PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    RKEY            shift and go to state 30
    PUBLIC          shift and go to state 32

    metodo                         shift and go to state 31

state 24

    (9) conj_var -> conj_var var .

    INT             reduce using rule 9 (conj_var -> conj_var var .)
    BOOLEAN         reduce using rule 9 (conj_var -> conj_var var .)
    ID              reduce using rule 9 (conj_var -> conj_var var .)
    RKEY            reduce using rule 9 (conj_var -> conj_var var .)
    PUBLIC          reduce using rule 9 (conj_var -> conj_var var .)
    RETURN          reduce using rule 9 (conj_var -> conj_var var .)
    LKEY            reduce using rule 9 (conj_var -> conj_var var .)
    IF              reduce using rule 9 (conj_var -> conj_var var .)
    WHILE           reduce using rule 9 (conj_var -> conj_var var .)
    SYSTEMOUTPRINTLN reduce using rule 9 (conj_var -> conj_var var .)


state 25

    (10) conj_metodos -> empty .

    RKEY            reduce using rule 10 (conj_metodos -> empty .)
    PUBLIC          reduce using rule 10 (conj_metodos -> empty .)


state 26

    (12) var -> tipo . ID SEMICOLON

    ID              shift and go to state 33


state 27

    (21) tipo -> INT . LBRACKET RBRACKET
    (23) tipo -> INT .

    LBRACKET        shift and go to state 34
    ID              reduce using rule 23 (tipo -> INT .)


state 28

    (22) tipo -> BOOLEAN .

    ID              reduce using rule 22 (tipo -> BOOLEAN .)


state 29

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    STRING          shift and go to state 35


state 30

    (5) classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .

    CLASS           reduce using rule 5 (classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .)
    $end            reduce using rule 5 (classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .)


state 31

    (11) conj_metodos -> conj_metodos metodo .

    RKEY            reduce using rule 11 (conj_metodos -> conj_metodos metodo .)
    PUBLIC          reduce using rule 11 (conj_metodos -> conj_metodos metodo .)


state 32

    (13) metodo -> PUBLIC . tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 27
    BOOLEAN         shift and go to state 28
    ID              shift and go to state 22

    tipo                           shift and go to state 36

state 33

    (12) var -> tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 37


state 34

    (21) tipo -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 38


state 35

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LBRACKET        shift and go to state 39


state 36

    (13) metodo -> PUBLIC tipo . ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    ID              shift and go to state 40


state 37

    (12) var -> tipo ID SEMICOLON .

    INT             reduce using rule 12 (var -> tipo ID SEMICOLON .)
    BOOLEAN         reduce using rule 12 (var -> tipo ID SEMICOLON .)
    ID              reduce using rule 12 (var -> tipo ID SEMICOLON .)
    RKEY            reduce using rule 12 (var -> tipo ID SEMICOLON .)
    PUBLIC          reduce using rule 12 (var -> tipo ID SEMICOLON .)
    RETURN          reduce using rule 12 (var -> tipo ID SEMICOLON .)
    LKEY            reduce using rule 12 (var -> tipo ID SEMICOLON .)
    IF              reduce using rule 12 (var -> tipo ID SEMICOLON .)
    WHILE           reduce using rule 12 (var -> tipo ID SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 12 (var -> tipo ID SEMICOLON .)


state 38

    (21) tipo -> INT LBRACKET RBRACKET .

    ID              reduce using rule 21 (tipo -> INT LBRACKET RBRACKET .)


state 39

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    RBRACKET        shift and go to state 41


state 40

    (13) metodo -> PUBLIC tipo ID . LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    LPAREN          shift and go to state 42


state 41

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ID RPAREN LKEY cmd1 RKEY RKEY

    ID              shift and go to state 43


state 42

    (13) metodo -> PUBLIC tipo ID LPAREN . params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (16) params -> . empty
    (17) params -> . conj_params
    (70) empty -> .
    (18) conj_params -> . tipo ID mais_param
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    RPAREN          reduce using rule 70 (empty -> .)
    INT             shift and go to state 27
    BOOLEAN         shift and go to state 28
    ID              shift and go to state 22

    tipo                           shift and go to state 44
    params                         shift and go to state 45
    empty                          shift and go to state 46
    conj_params                    shift and go to state 47

state 43

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID . RPAREN LKEY cmd1 RKEY RKEY

    RPAREN          shift and go to state 48


state 44

    (18) conj_params -> tipo . ID mais_param

    ID              shift and go to state 49


state 45

    (13) metodo -> PUBLIC tipo ID LPAREN params . RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    RPAREN          shift and go to state 50


state 46

    (16) params -> empty .

    RPAREN          reduce using rule 16 (params -> empty .)


state 47

    (17) params -> conj_params .

    RPAREN          reduce using rule 17 (params -> conj_params .)


state 48

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN . LKEY cmd1 RKEY RKEY

    LKEY            shift and go to state 51


state 49

    (18) conj_params -> tipo ID . mais_param
    (19) mais_param -> . empty
    (20) mais_param -> . mais_param COLON tipo ID
    (70) empty -> .

    COLON           reduce using rule 70 (empty -> .)
    RPAREN          reduce using rule 70 (empty -> .)

    mais_param                     shift and go to state 52
    empty                          shift and go to state 53

state 50

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN . LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    LKEY            shift and go to state 54


state 51

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY . cmd1 RKEY RKEY
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 57

state 52

    (18) conj_params -> tipo ID mais_param .
    (20) mais_param -> mais_param . COLON tipo ID

    RPAREN          reduce using rule 18 (conj_params -> tipo ID mais_param .)
    COLON           shift and go to state 61


state 53

    (19) mais_param -> empty .

    COLON           reduce using rule 19 (mais_param -> empty .)
    RPAREN          reduce using rule 19 (mais_param -> empty .)


state 54

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY . conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (8) conj_var -> . empty
    (9) conj_var -> . conj_var var
    (70) empty -> .

    INT             reduce using rule 70 (empty -> .)
    BOOLEAN         reduce using rule 70 (empty -> .)
    ID              reduce using rule 70 (empty -> .)
    RETURN          reduce using rule 70 (empty -> .)
    LKEY            reduce using rule 70 (empty -> .)
    IF              reduce using rule 70 (empty -> .)
    WHILE           reduce using rule 70 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 70 (empty -> .)

    conj_var                       shift and go to state 62
    empty                          shift and go to state 20

state 55

    (30) cmd1 -> ID . ATTR exp SEMICOLON
    (31) cmd1 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON

    ATTR            shift and go to state 63
    LBRACKET        shift and go to state 64


state 56

    (25) cmd1 -> LKEY . conj_cmd RKEY
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (70) empty -> .

    RKEY            reduce using rule 70 (empty -> .)
    LKEY            reduce using rule 70 (empty -> .)
    IF              reduce using rule 70 (empty -> .)
    WHILE           reduce using rule 70 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 70 (empty -> .)
    ID              reduce using rule 70 (empty -> .)

    conj_cmd                       shift and go to state 65
    empty                          shift and go to state 66

state 57

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 . RKEY RKEY

    RKEY            shift and go to state 67


state 58

    (26) cmd1 -> IF . LPAREN exp RPAREN cmd1
    (27) cmd1 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd1

    LPAREN          shift and go to state 68


state 59

    (28) cmd1 -> WHILE . LPAREN exp RPAREN cmd1

    LPAREN          shift and go to state 69


state 60

    (29) cmd1 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 61

    (20) mais_param -> mais_param COLON . tipo ID
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 27
    BOOLEAN         shift and go to state 28
    ID              shift and go to state 22

    tipo                           shift and go to state 71

state 62

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var . conj_cmd RETURN exp SEMICOLON RKEY
    (9) conj_var -> conj_var . var
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (12) var -> . tipo ID SEMICOLON
    (70) empty -> .
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RETURN          reduce using rule 70 (empty -> .)
    LKEY            reduce using rule 70 (empty -> .)
    IF              reduce using rule 70 (empty -> .)
    WHILE           reduce using rule 70 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 70 (empty -> .)
    INT             shift and go to state 27
    BOOLEAN         shift and go to state 28
    ID              shift and go to state 22

  ! ID              [ reduce using rule 70 (empty -> .) ]

    tipo                           shift and go to state 26
    conj_cmd                       shift and go to state 72
    var                            shift and go to state 24
    empty                          shift and go to state 66

state 63

    (30) cmd1 -> ID ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 74
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 64

    (31) cmd1 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 89
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 65

    (25) cmd1 -> LKEY conj_cmd . RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RKEY            shift and go to state 90
    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 91

state 66

    (14) conj_cmd -> empty .

    RKEY            reduce using rule 14 (conj_cmd -> empty .)
    LKEY            reduce using rule 14 (conj_cmd -> empty .)
    IF              reduce using rule 14 (conj_cmd -> empty .)
    WHILE           reduce using rule 14 (conj_cmd -> empty .)
    SYSTEMOUTPRINTLN reduce using rule 14 (conj_cmd -> empty .)
    ID              reduce using rule 14 (conj_cmd -> empty .)
    RETURN          reduce using rule 14 (conj_cmd -> empty .)


state 67

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY . RKEY

    RKEY            shift and go to state 92


state 68

    (26) cmd1 -> IF LPAREN . exp RPAREN cmd1
    (27) cmd1 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd1
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 93
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 69

    (28) cmd1 -> WHILE LPAREN . exp RPAREN cmd1
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 94
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 70

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 95
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 71

    (20) mais_param -> mais_param COLON tipo . ID

    ID              shift and go to state 96


state 72

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd . RETURN exp SEMICOLON RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RETURN          shift and go to state 97
    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 91

state 73

    (59) pexp -> ID .

    DOT             reduce using rule 59 (pexp -> ID .)
    LBRACKET        reduce using rule 59 (pexp -> ID .)
    TIMES           reduce using rule 59 (pexp -> ID .)
    PLUS            reduce using rule 59 (pexp -> ID .)
    MINUS           reduce using rule 59 (pexp -> ID .)
    LTHAN           reduce using rule 59 (pexp -> ID .)
    EQUALS          reduce using rule 59 (pexp -> ID .)
    NEQUALS         reduce using rule 59 (pexp -> ID .)
    SEMICOLON       reduce using rule 59 (pexp -> ID .)
    AND             reduce using rule 59 (pexp -> ID .)
    RBRACKET        reduce using rule 59 (pexp -> ID .)
    RPAREN          reduce using rule 59 (pexp -> ID .)


state 74

    (30) cmd1 -> ID ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 98
    AND             shift and go to state 99


state 75

    (39) exp -> rexp .
    (40) rexp -> rexp . LTHAN aexp
    (41) rexp -> rexp . EQUALS aexp
    (42) rexp -> rexp . NEQUALS aexp

    SEMICOLON       reduce using rule 39 (exp -> rexp .)
    AND             reduce using rule 39 (exp -> rexp .)
    RBRACKET        reduce using rule 39 (exp -> rexp .)
    RPAREN          reduce using rule 39 (exp -> rexp .)
    LTHAN           shift and go to state 100
    EQUALS          shift and go to state 101
    NEQUALS         shift and go to state 102


state 76

    (43) rexp -> aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 43 (rexp -> aexp .)
    EQUALS          reduce using rule 43 (rexp -> aexp .)
    NEQUALS         reduce using rule 43 (rexp -> aexp .)
    SEMICOLON       reduce using rule 43 (rexp -> aexp .)
    AND             reduce using rule 43 (rexp -> aexp .)
    RBRACKET        reduce using rule 43 (rexp -> aexp .)
    RPAREN          reduce using rule 43 (rexp -> aexp .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104


state 77

    (46) aexp -> mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 46 (aexp -> mexp .)
    MINUS           reduce using rule 46 (aexp -> mexp .)
    LTHAN           reduce using rule 46 (aexp -> mexp .)
    EQUALS          reduce using rule 46 (aexp -> mexp .)
    NEQUALS         reduce using rule 46 (aexp -> mexp .)
    SEMICOLON       reduce using rule 46 (aexp -> mexp .)
    AND             reduce using rule 46 (aexp -> mexp .)
    RBRACKET        reduce using rule 46 (aexp -> mexp .)
    RPAREN          reduce using rule 46 (aexp -> mexp .)
    TIMES           shift and go to state 105


state 78

    (50) sexp -> MINUS . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    sexp                           shift and go to state 106
    pexp                           shift and go to state 86

state 79

    (48) mexp -> sexp .

    TIMES           reduce using rule 48 (mexp -> sexp .)
    PLUS            reduce using rule 48 (mexp -> sexp .)
    MINUS           reduce using rule 48 (mexp -> sexp .)
    LTHAN           reduce using rule 48 (mexp -> sexp .)
    EQUALS          reduce using rule 48 (mexp -> sexp .)
    NEQUALS         reduce using rule 48 (mexp -> sexp .)
    SEMICOLON       reduce using rule 48 (mexp -> sexp .)
    AND             reduce using rule 48 (mexp -> sexp .)
    RBRACKET        reduce using rule 48 (mexp -> sexp .)
    RPAREN          reduce using rule 48 (mexp -> sexp .)


state 80

    (49) sexp -> NOT . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    sexp                           shift and go to state 107
    pexp                           shift and go to state 86

state 81

    (51) sexp -> TRUE .

    TIMES           reduce using rule 51 (sexp -> TRUE .)
    PLUS            reduce using rule 51 (sexp -> TRUE .)
    MINUS           reduce using rule 51 (sexp -> TRUE .)
    LTHAN           reduce using rule 51 (sexp -> TRUE .)
    EQUALS          reduce using rule 51 (sexp -> TRUE .)
    NEQUALS         reduce using rule 51 (sexp -> TRUE .)
    SEMICOLON       reduce using rule 51 (sexp -> TRUE .)
    AND             reduce using rule 51 (sexp -> TRUE .)
    RBRACKET        reduce using rule 51 (sexp -> TRUE .)
    RPAREN          reduce using rule 51 (sexp -> TRUE .)


state 82

    (52) sexp -> FALSE .

    TIMES           reduce using rule 52 (sexp -> FALSE .)
    PLUS            reduce using rule 52 (sexp -> FALSE .)
    MINUS           reduce using rule 52 (sexp -> FALSE .)
    LTHAN           reduce using rule 52 (sexp -> FALSE .)
    EQUALS          reduce using rule 52 (sexp -> FALSE .)
    NEQUALS         reduce using rule 52 (sexp -> FALSE .)
    SEMICOLON       reduce using rule 52 (sexp -> FALSE .)
    AND             reduce using rule 52 (sexp -> FALSE .)
    RBRACKET        reduce using rule 52 (sexp -> FALSE .)
    RPAREN          reduce using rule 52 (sexp -> FALSE .)


state 83

    (53) sexp -> NUMBER .

    TIMES           reduce using rule 53 (sexp -> NUMBER .)
    PLUS            reduce using rule 53 (sexp -> NUMBER .)
    MINUS           reduce using rule 53 (sexp -> NUMBER .)
    LTHAN           reduce using rule 53 (sexp -> NUMBER .)
    EQUALS          reduce using rule 53 (sexp -> NUMBER .)
    NEQUALS         reduce using rule 53 (sexp -> NUMBER .)
    SEMICOLON       reduce using rule 53 (sexp -> NUMBER .)
    AND             reduce using rule 53 (sexp -> NUMBER .)
    RBRACKET        reduce using rule 53 (sexp -> NUMBER .)
    RPAREN          reduce using rule 53 (sexp -> NUMBER .)


state 84

    (54) sexp -> NULL .

    TIMES           reduce using rule 54 (sexp -> NULL .)
    PLUS            reduce using rule 54 (sexp -> NULL .)
    MINUS           reduce using rule 54 (sexp -> NULL .)
    LTHAN           reduce using rule 54 (sexp -> NULL .)
    EQUALS          reduce using rule 54 (sexp -> NULL .)
    NEQUALS         reduce using rule 54 (sexp -> NULL .)
    SEMICOLON       reduce using rule 54 (sexp -> NULL .)
    AND             reduce using rule 54 (sexp -> NULL .)
    RBRACKET        reduce using rule 54 (sexp -> NULL .)
    RPAREN          reduce using rule 54 (sexp -> NULL .)


state 85

    (55) sexp -> NEW . INT LBRACKET exp RBRACKET
    (62) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 108
    ID              shift and go to state 109


state 86

    (56) sexp -> pexp . DOT LENGTH
    (57) sexp -> pexp . LBRACKET exp RBRACKET
    (58) sexp -> pexp .
    (63) pexp -> pexp . DOT ID
    (64) pexp -> pexp . DOT ID LPAREN option_exps RPAREN

    DOT             shift and go to state 110
    LBRACKET        shift and go to state 111
    TIMES           reduce using rule 58 (sexp -> pexp .)
    PLUS            reduce using rule 58 (sexp -> pexp .)
    MINUS           reduce using rule 58 (sexp -> pexp .)
    LTHAN           reduce using rule 58 (sexp -> pexp .)
    EQUALS          reduce using rule 58 (sexp -> pexp .)
    NEQUALS         reduce using rule 58 (sexp -> pexp .)
    SEMICOLON       reduce using rule 58 (sexp -> pexp .)
    AND             reduce using rule 58 (sexp -> pexp .)
    RBRACKET        reduce using rule 58 (sexp -> pexp .)
    RPAREN          reduce using rule 58 (sexp -> pexp .)


state 87

    (60) pexp -> THIS .

    DOT             reduce using rule 60 (pexp -> THIS .)
    LBRACKET        reduce using rule 60 (pexp -> THIS .)
    TIMES           reduce using rule 60 (pexp -> THIS .)
    PLUS            reduce using rule 60 (pexp -> THIS .)
    MINUS           reduce using rule 60 (pexp -> THIS .)
    LTHAN           reduce using rule 60 (pexp -> THIS .)
    EQUALS          reduce using rule 60 (pexp -> THIS .)
    NEQUALS         reduce using rule 60 (pexp -> THIS .)
    SEMICOLON       reduce using rule 60 (pexp -> THIS .)
    AND             reduce using rule 60 (pexp -> THIS .)
    RBRACKET        reduce using rule 60 (pexp -> THIS .)
    RPAREN          reduce using rule 60 (pexp -> THIS .)


state 88

    (61) pexp -> LPAREN . exp RPAREN
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 112
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 89

    (31) cmd1 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 113
    AND             shift and go to state 99


state 90

    (25) cmd1 -> LKEY conj_cmd RKEY .

    RKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    LKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    IF              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    WHILE           reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    SYSTEMOUTPRINTLN reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ID              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    RETURN          reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)


state 91

    (15) conj_cmd -> conj_cmd cmd1 .

    RKEY            reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    LKEY            reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    IF              reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    WHILE           reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    ID              reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    RETURN          reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)


state 92

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .

    CLASS           reduce using rule 2 (main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .)
    $end            reduce using rule 2 (main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .)


state 93

    (26) cmd1 -> IF LPAREN exp . RPAREN cmd1
    (27) cmd1 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd1
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 114
    AND             shift and go to state 99


state 94

    (28) cmd1 -> WHILE LPAREN exp . RPAREN cmd1
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 115
    AND             shift and go to state 99


state 95

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 116
    AND             shift and go to state 99


state 96

    (20) mais_param -> mais_param COLON tipo ID .

    COLON           reduce using rule 20 (mais_param -> mais_param COLON tipo ID .)
    RPAREN          reduce using rule 20 (mais_param -> mais_param COLON tipo ID .)


state 97

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN . exp SEMICOLON RKEY
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 117
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 98

    (30) cmd1 -> ID ATTR exp SEMICOLON .

    RKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    LKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    IF              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    WHILE           reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ID              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    RETURN          reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)


state 99

    (38) exp -> exp AND . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    rexp                           shift and go to state 118
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 100

    (40) rexp -> rexp LTHAN . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    aexp                           shift and go to state 119
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 101

    (41) rexp -> rexp EQUALS . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    aexp                           shift and go to state 120
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 102

    (42) rexp -> rexp NEQUALS . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    aexp                           shift and go to state 121
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 103

    (44) aexp -> aexp PLUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    mexp                           shift and go to state 122
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 104

    (45) aexp -> aexp MINUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    mexp                           shift and go to state 123
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 105

    (47) mexp -> mexp TIMES . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    sexp                           shift and go to state 124
    pexp                           shift and go to state 86

state 106

    (50) sexp -> MINUS sexp .

    TIMES           reduce using rule 50 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 50 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 50 (sexp -> MINUS sexp .)
    LTHAN           reduce using rule 50 (sexp -> MINUS sexp .)
    EQUALS          reduce using rule 50 (sexp -> MINUS sexp .)
    NEQUALS         reduce using rule 50 (sexp -> MINUS sexp .)
    SEMICOLON       reduce using rule 50 (sexp -> MINUS sexp .)
    AND             reduce using rule 50 (sexp -> MINUS sexp .)
    RBRACKET        reduce using rule 50 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 50 (sexp -> MINUS sexp .)


state 107

    (49) sexp -> NOT sexp .

    TIMES           reduce using rule 49 (sexp -> NOT sexp .)
    PLUS            reduce using rule 49 (sexp -> NOT sexp .)
    MINUS           reduce using rule 49 (sexp -> NOT sexp .)
    LTHAN           reduce using rule 49 (sexp -> NOT sexp .)
    EQUALS          reduce using rule 49 (sexp -> NOT sexp .)
    NEQUALS         reduce using rule 49 (sexp -> NOT sexp .)
    SEMICOLON       reduce using rule 49 (sexp -> NOT sexp .)
    AND             reduce using rule 49 (sexp -> NOT sexp .)
    RBRACKET        reduce using rule 49 (sexp -> NOT sexp .)
    RPAREN          reduce using rule 49 (sexp -> NOT sexp .)


state 108

    (55) sexp -> NEW INT . LBRACKET exp RBRACKET

    LBRACKET        shift and go to state 125


state 109

    (62) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 126


state 110

    (56) sexp -> pexp DOT . LENGTH
    (63) pexp -> pexp DOT . ID
    (64) pexp -> pexp DOT . ID LPAREN option_exps RPAREN

    LENGTH          shift and go to state 127
    ID              shift and go to state 128


state 111

    (57) sexp -> pexp LBRACKET . exp RBRACKET
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    pexp                           shift and go to state 86
    exp                            shift and go to state 129
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79

state 112

    (61) pexp -> LPAREN exp . RPAREN
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 130
    AND             shift and go to state 99


state 113

    (31) cmd1 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON

    ATTR            shift and go to state 131


state 114

    (26) cmd1 -> IF LPAREN exp RPAREN . cmd1
    (27) cmd1 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 135
    IF              shift and go to state 132
    WHILE           shift and go to state 136
    SYSTEMOUTPRINTLN shift and go to state 137
    ID              shift and go to state 138

    cmd1                           shift and go to state 133
    cmd2                           shift and go to state 134

state 115

    (28) cmd1 -> WHILE LPAREN exp RPAREN . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 139

state 116

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 140


state 117

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp . SEMICOLON RKEY
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 141
    AND             shift and go to state 99


state 118

    (38) exp -> exp AND rexp .
    (40) rexp -> rexp . LTHAN aexp
    (41) rexp -> rexp . EQUALS aexp
    (42) rexp -> rexp . NEQUALS aexp

    SEMICOLON       reduce using rule 38 (exp -> exp AND rexp .)
    AND             reduce using rule 38 (exp -> exp AND rexp .)
    RBRACKET        reduce using rule 38 (exp -> exp AND rexp .)
    RPAREN          reduce using rule 38 (exp -> exp AND rexp .)
    LTHAN           shift and go to state 100
    EQUALS          shift and go to state 101
    NEQUALS         shift and go to state 102


state 119

    (40) rexp -> rexp LTHAN aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    EQUALS          reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    NEQUALS         reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    SEMICOLON       reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    AND             reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    RBRACKET        reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    RPAREN          reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104


state 120

    (41) rexp -> rexp EQUALS aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    EQUALS          reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    NEQUALS         reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    SEMICOLON       reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    AND             reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    RBRACKET        reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    RPAREN          reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104


state 121

    (42) rexp -> rexp NEQUALS aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    EQUALS          reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    NEQUALS         reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    SEMICOLON       reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    AND             reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    RBRACKET        reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    RPAREN          reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104


state 122

    (44) aexp -> aexp PLUS mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 44 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    LTHAN           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    EQUALS          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    NEQUALS         reduce using rule 44 (aexp -> aexp PLUS mexp .)
    SEMICOLON       reduce using rule 44 (aexp -> aexp PLUS mexp .)
    AND             reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RBRACKET        reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 105


state 123

    (45) aexp -> aexp MINUS mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 45 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    LTHAN           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    EQUALS          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    NEQUALS         reduce using rule 45 (aexp -> aexp MINUS mexp .)
    SEMICOLON       reduce using rule 45 (aexp -> aexp MINUS mexp .)
    AND             reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RBRACKET        reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 105


state 124

    (47) mexp -> mexp TIMES sexp .

    TIMES           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 47 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    LTHAN           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    EQUALS          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    NEQUALS         reduce using rule 47 (mexp -> mexp TIMES sexp .)
    SEMICOLON       reduce using rule 47 (mexp -> mexp TIMES sexp .)
    AND             reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RBRACKET        reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 47 (mexp -> mexp TIMES sexp .)


state 125

    (55) sexp -> NEW INT LBRACKET . exp RBRACKET
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 142
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 126

    (62) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 143


state 127

    (56) sexp -> pexp DOT LENGTH .

    TIMES           reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    PLUS            reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    MINUS           reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    LTHAN           reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    EQUALS          reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    NEQUALS         reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    SEMICOLON       reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    AND             reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    RBRACKET        reduce using rule 56 (sexp -> pexp DOT LENGTH .)
    RPAREN          reduce using rule 56 (sexp -> pexp DOT LENGTH .)


state 128

    (63) pexp -> pexp DOT ID .
    (64) pexp -> pexp DOT ID . LPAREN option_exps RPAREN

    DOT             reduce using rule 63 (pexp -> pexp DOT ID .)
    LBRACKET        reduce using rule 63 (pexp -> pexp DOT ID .)
    TIMES           reduce using rule 63 (pexp -> pexp DOT ID .)
    PLUS            reduce using rule 63 (pexp -> pexp DOT ID .)
    MINUS           reduce using rule 63 (pexp -> pexp DOT ID .)
    LTHAN           reduce using rule 63 (pexp -> pexp DOT ID .)
    EQUALS          reduce using rule 63 (pexp -> pexp DOT ID .)
    NEQUALS         reduce using rule 63 (pexp -> pexp DOT ID .)
    SEMICOLON       reduce using rule 63 (pexp -> pexp DOT ID .)
    AND             reduce using rule 63 (pexp -> pexp DOT ID .)
    RBRACKET        reduce using rule 63 (pexp -> pexp DOT ID .)
    RPAREN          reduce using rule 63 (pexp -> pexp DOT ID .)
    LPAREN          shift and go to state 144


state 129

    (57) sexp -> pexp LBRACKET exp . RBRACKET
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 145
    AND             shift and go to state 99


state 130

    (61) pexp -> LPAREN exp RPAREN .

    DOT             reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    TIMES           reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    EQUALS          reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    NEQUALS         reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 61 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 61 (pexp -> LPAREN exp RPAREN .)


state 131

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 146
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 132

    (26) cmd1 -> IF . LPAREN exp RPAREN cmd1
    (27) cmd1 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd2

    LPAREN          shift and go to state 147


state 133

    (26) cmd1 -> IF LPAREN exp RPAREN cmd1 .

    RKEY            reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    LKEY            reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    IF              reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    WHILE           reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    ID              reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    RETURN          reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)


state 134

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd1

    ELSE            shift and go to state 148


state 135

    (25) cmd1 -> LKEY . conj_cmd RKEY
    (32) cmd2 -> LKEY . conj_cmd RKEY
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (70) empty -> .

    RKEY            reduce using rule 70 (empty -> .)
    LKEY            reduce using rule 70 (empty -> .)
    IF              reduce using rule 70 (empty -> .)
    WHILE           reduce using rule 70 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 70 (empty -> .)
    ID              reduce using rule 70 (empty -> .)

    conj_cmd                       shift and go to state 149
    empty                          shift and go to state 66

state 136

    (28) cmd1 -> WHILE . LPAREN exp RPAREN cmd1
    (34) cmd2 -> WHILE . LPAREN exp RPAREN cmd2

    LPAREN          shift and go to state 150


state 137

    (29) cmd1 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 151


state 138

    (30) cmd1 -> ID . ATTR exp SEMICOLON
    (31) cmd1 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (36) cmd2 -> ID . ATTR exp SEMICOLON
    (37) cmd2 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON

    ATTR            shift and go to state 152
    LBRACKET        shift and go to state 153


state 139

    (28) cmd1 -> WHILE LPAREN exp RPAREN cmd1 .

    RKEY            reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    LKEY            reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    IF              reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    WHILE           reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    ID              reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    RETURN          reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)


state 140

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .

    RKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    LKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)


state 141

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON . RKEY

    RKEY            shift and go to state 154


state 142

    (55) sexp -> NEW INT LBRACKET exp . RBRACKET
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 155
    AND             shift and go to state 99


state 143

    (62) pexp -> NEW ID LPAREN RPAREN .

    DOT             reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    LTHAN           reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    EQUALS          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    NEQUALS         reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    AND             reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (pexp -> NEW ID LPAREN RPAREN .)


state 144

    (64) pexp -> pexp DOT ID LPAREN . option_exps RPAREN
    (65) option_exps -> . empty
    (66) option_exps -> . exp
    (70) empty -> .
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    RPAREN          reduce using rule 70 (empty -> .)
    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    pexp                           shift and go to state 86
    option_exps                    shift and go to state 156
    empty                          shift and go to state 157
    exp                            shift and go to state 158
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79

state 145

    (57) sexp -> pexp LBRACKET exp RBRACKET .

    TIMES           reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    LTHAN           reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    NEQUALS         reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    AND             reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 57 (sexp -> pexp LBRACKET exp RBRACKET .)


state 146

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 159
    AND             shift and go to state 99


state 147

    (26) cmd1 -> IF LPAREN . exp RPAREN cmd1
    (27) cmd1 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd2
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 160
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 148

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 161

state 149

    (25) cmd1 -> LKEY conj_cmd . RKEY
    (32) cmd2 -> LKEY conj_cmd . RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RKEY            shift and go to state 162
    LKEY            shift and go to state 56
    IF              shift and go to state 58
    WHILE           shift and go to state 59
    SYSTEMOUTPRINTLN shift and go to state 60
    ID              shift and go to state 55

    cmd1                           shift and go to state 91

state 150

    (28) cmd1 -> WHILE LPAREN . exp RPAREN cmd1
    (34) cmd2 -> WHILE LPAREN . exp RPAREN cmd2
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 163
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 151

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 164
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 152

    (30) cmd1 -> ID ATTR . exp SEMICOLON
    (36) cmd2 -> ID ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 165
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 153

    (31) cmd1 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 166
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 154

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .

    RKEY            reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .)
    PUBLIC          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .)


state 155

    (55) sexp -> NEW INT LBRACKET exp RBRACKET .

    TIMES           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    LTHAN           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    NEQUALS         reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    AND             reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)


state 156

    (64) pexp -> pexp DOT ID LPAREN option_exps . RPAREN

    RPAREN          shift and go to state 167


state 157

    (65) option_exps -> empty .

    RPAREN          reduce using rule 65 (option_exps -> empty .)


state 158

    (66) option_exps -> exp .
    (38) exp -> exp . AND rexp

    RPAREN          reduce using rule 66 (option_exps -> exp .)
    AND             shift and go to state 99


state 159

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .

    RKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    LKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    IF              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    WHILE           reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ID              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    RETURN          reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)


state 160

    (26) cmd1 -> IF LPAREN exp . RPAREN cmd1
    (27) cmd1 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd2
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 168
    AND             shift and go to state 99


state 161

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .

    RKEY            reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    LKEY            reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    IF              reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    WHILE           reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    ID              reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    RETURN          reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)


state 162

    (25) cmd1 -> LKEY conj_cmd RKEY .
    (32) cmd2 -> LKEY conj_cmd RKEY .

    RKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    LKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    IF              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    WHILE           reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    SYSTEMOUTPRINTLN reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ID              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    RETURN          reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ELSE            reduce using rule 32 (cmd2 -> LKEY conj_cmd RKEY .)


state 163

    (28) cmd1 -> WHILE LPAREN exp . RPAREN cmd1
    (34) cmd2 -> WHILE LPAREN exp . RPAREN cmd2
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 169
    AND             shift and go to state 99


state 164

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 170
    AND             shift and go to state 99


state 165

    (30) cmd1 -> ID ATTR exp . SEMICOLON
    (36) cmd2 -> ID ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 171
    AND             shift and go to state 99


state 166

    (31) cmd1 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 172
    AND             shift and go to state 99


state 167

    (64) pexp -> pexp DOT ID LPAREN option_exps RPAREN .

    DOT             reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    LBRACKET        reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    TIMES           reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    PLUS            reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    MINUS           reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    LTHAN           reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    EQUALS          reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    NEQUALS         reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    SEMICOLON       reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    AND             reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    RBRACKET        reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    RPAREN          reduce using rule 64 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)


state 168

    (26) cmd1 -> IF LPAREN exp RPAREN . cmd1
    (27) cmd1 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 135
    IF              shift and go to state 132
    WHILE           shift and go to state 136
    SYSTEMOUTPRINTLN shift and go to state 137
    ID              shift and go to state 138

    cmd1                           shift and go to state 133
    cmd2                           shift and go to state 173

state 169

    (28) cmd1 -> WHILE LPAREN exp RPAREN . cmd1
    (34) cmd2 -> WHILE LPAREN exp RPAREN . cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 135
    IF              shift and go to state 132
    WHILE           shift and go to state 136
    SYSTEMOUTPRINTLN shift and go to state 137
    ID              shift and go to state 138

    cmd1                           shift and go to state 139
    cmd2                           shift and go to state 174

state 170

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 175


state 171

    (30) cmd1 -> ID ATTR exp SEMICOLON .
    (36) cmd2 -> ID ATTR exp SEMICOLON .

    RKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    LKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    IF              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    WHILE           reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ID              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    RETURN          reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ELSE            reduce using rule 36 (cmd2 -> ID ATTR exp SEMICOLON .)


state 172

    (31) cmd1 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON

    ATTR            shift and go to state 176


state 173

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd2

    ELSE            shift and go to state 177


state 174

    (34) cmd2 -> WHILE LPAREN exp RPAREN cmd2 .

    ELSE            reduce using rule 34 (cmd2 -> WHILE LPAREN exp RPAREN cmd2 .)


state 175

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .

    RKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    LKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ELSE            reduce using rule 35 (cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)


state 176

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> . pexp DOT LENGTH
    (57) sexp -> . pexp LBRACKET exp RBRACKET
    (58) sexp -> . pexp
    (59) pexp -> . ID
    (60) pexp -> . THIS
    (61) pexp -> . LPAREN exp RPAREN
    (62) pexp -> . NEW ID LPAREN RPAREN
    (63) pexp -> . pexp DOT ID
    (64) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

    NOT             shift and go to state 80
    MINUS           shift and go to state 78
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82
    NUMBER          shift and go to state 83
    NULL            shift and go to state 84
    NEW             shift and go to state 85
    ID              shift and go to state 73
    THIS            shift and go to state 87
    LPAREN          shift and go to state 88

    exp                            shift and go to state 178
    rexp                           shift and go to state 75
    aexp                           shift and go to state 76
    mexp                           shift and go to state 77
    sexp                           shift and go to state 79
    pexp                           shift and go to state 86

state 177

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 135
    IF              shift and go to state 132
    WHILE           shift and go to state 136
    SYSTEMOUTPRINTLN shift and go to state 137
    ID              shift and go to state 138

    cmd2                           shift and go to state 179
    cmd1                           shift and go to state 161

state 178

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 180
    AND             shift and go to state 99


state 179

    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2 .

    ELSE            reduce using rule 33 (cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2 .)


state 180

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .

    RKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    LKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    IF              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    WHILE           reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ID              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    RETURN          reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ELSE            reduce using rule 37 (cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
