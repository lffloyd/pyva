Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    GTHAN
    GEQTHAN
    LEQTHAN

Grammar

Rule 0     S' -> prog
Rule 1     prog -> main conj_classes
Rule 2     main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY
Rule 3     conj_classes -> empty
Rule 4     conj_classes -> conj_classes classe
Rule 5     classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY
Rule 6     extension -> empty
Rule 7     extension -> EXTENDS ID
Rule 8     conj_var -> empty
Rule 9     conj_var -> conj_var var
Rule 10    conj_metodos -> empty
Rule 11    conj_metodos -> conj_metodos metodo
Rule 12    var -> tipo ID SEMICOLON
Rule 13    metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
Rule 14    conj_cmd -> empty
Rule 15    conj_cmd -> conj_cmd cmd1
Rule 16    params -> empty
Rule 17    params -> conj_params
Rule 18    conj_params -> tipo ID mais_param
Rule 19    mais_param -> empty
Rule 20    mais_param -> mais_param COLON tipo ID
Rule 21    tipo -> INT LBRACKET RBRACKET
Rule 22    tipo -> BOOLEAN
Rule 23    tipo -> INT
Rule 24    tipo -> ID
Rule 25    cmd1 -> LKEY conj_cmd RKEY
Rule 26    cmd1 -> IF LPAREN exp RPAREN cmd1
Rule 27    cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1
Rule 28    cmd1 -> WHILE LPAREN exp RPAREN cmd1
Rule 29    cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
Rule 30    cmd1 -> ID ATTR exp SEMICOLON
Rule 31    cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
Rule 32    cmd2 -> LKEY conj_cmd RKEY
Rule 33    cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2
Rule 34    cmd2 -> WHILE LPAREN exp RPAREN cmd2
Rule 35    cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
Rule 36    cmd2 -> ID ATTR exp SEMICOLON
Rule 37    cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
Rule 38    exp -> exp AND rexp
Rule 39    exp -> rexp
Rule 40    rexp -> rexp LTHAN aexp
Rule 41    rexp -> rexp EQUALS aexp
Rule 42    rexp -> rexp NEQUALS aexp
Rule 43    rexp -> aexp
Rule 44    aexp -> aexp PLUS mexp
Rule 45    aexp -> aexp MINUS mexp
Rule 46    aexp -> mexp
Rule 47    mexp -> mexp TIMES sexp
Rule 48    mexp -> sexp
Rule 49    sexp -> NOT sexp
Rule 50    sexp -> MINUS sexp
Rule 51    sexp -> TRUE
Rule 52    sexp -> FALSE
Rule 53    sexp -> NUMBER
Rule 54    sexp -> NULL
Rule 55    sexp -> NEW INT LBRACKET exp RBRACKET
Rule 56    sexp -> <empty>
Rule 57    sexp -> pexp DOT LENGTH
Rule 58    sexp -> pexp LBRACKET exp RBRACKET
Rule 59    sexp -> pexp
Rule 60    pexp -> ID
Rule 61    pexp -> THIS
Rule 62    pexp -> LPAREN exp RPAREN
Rule 63    pexp -> NEW ID LPAREN RPAREN
Rule 64    pexp -> pexp DOT ID
Rule 65    pexp -> pexp DOT ID LPAREN option_exps RPAREN
Rule 66    option_exps -> empty
Rule 67    option_exps -> exp
Rule 68    exps -> exp conj_exps
Rule 69    conj_exps -> empty
Rule 70    conj_exps -> conj_exps COLON exp
Rule 71    empty -> <empty>

Terminals, with rules where they appear

AND                  : 38
ATTR                 : 30 31 36 37
BOOLEAN              : 22
CLASS                : 2 5
COLON                : 20 70
DOT                  : 57 64 65
ELSE                 : 27 33
EQUALS               : 41
EXTENDS              : 7
FALSE                : 52
GEQTHAN              : 
GTHAN                : 
ID                   : 2 2 5 7 12 13 18 20 24 30 31 36 37 60 63 64 65
IF                   : 26 27 33
INT                  : 21 23 55
LBRACKET             : 2 21 31 37 55 58
LENGTH               : 57
LEQTHAN              : 
LKEY                 : 2 2 5 13 25 32
LPAREN               : 2 13 26 27 28 29 33 34 35 62 63 65
LTHAN                : 40
MAIN                 : 2
MINUS                : 45 50
NEQUALS              : 42
NEW                  : 55 63
NOT                  : 49
NULL                 : 54
NUMBER               : 53
PLUS                 : 44
PUBLIC               : 2 13
RBRACKET             : 2 21 31 37 55 58
RETURN               : 13
RKEY                 : 2 2 5 13 25 32
RPAREN               : 2 13 26 27 28 29 33 34 35 62 63 65
SEMICOLON            : 12 13 29 30 31 35 36 37
STATIC               : 2
STRING               : 2
SYSTEMOUTPRINTLN     : 29 35
THIS                 : 61
TIMES                : 47
TRUE                 : 51
VOID                 : 2
WHILE                : 28 34
error                : 

Nonterminals, with rules where they appear

aexp                 : 40 41 42 43 44 45
classe               : 4
cmd1                 : 2 15 26 27 28
cmd2                 : 27 33 33 34
conj_classes         : 1 4
conj_cmd             : 13 15 25 32
conj_exps            : 68 70
conj_metodos         : 5 11
conj_params          : 17
conj_var             : 5 9 13
empty                : 3 6 8 10 14 16 19 66 69
exp                  : 13 26 27 28 29 30 31 31 33 34 35 36 37 37 38 55 58 62 67 68 70
exps                 : 
extension            : 5
main                 : 1
mais_param           : 18 20
metodo               : 11
mexp                 : 44 45 46 47
option_exps          : 65
params               : 13
pexp                 : 57 58 59 64 65
prog                 : 0
rexp                 : 38 39 40 41 42
sexp                 : 47 48 49 50
tipo                 : 12 13 18 20
var                  : 9

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . main conj_classes
    (2) main -> . CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    CLASS           shift and go to state 1

    main                           shift and go to state 3
    prog                           shift and go to state 2

state 1

    (2) main -> CLASS . ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    ID              shift and go to state 4


state 2

    (0) S' -> prog .



state 3

    (1) prog -> main . conj_classes
    (3) conj_classes -> . empty
    (4) conj_classes -> . conj_classes classe
    (71) empty -> .

    CLASS           reduce using rule 71 (empty -> .)
    $end            reduce using rule 71 (empty -> .)

    empty                          shift and go to state 5
    conj_classes                   shift and go to state 6

state 4

    (2) main -> CLASS ID . LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LKEY            shift and go to state 7


state 5

    (3) conj_classes -> empty .

    CLASS           reduce using rule 3 (conj_classes -> empty .)
    $end            reduce using rule 3 (conj_classes -> empty .)


state 6

    (1) prog -> main conj_classes .
    (4) conj_classes -> conj_classes . classe
    (5) classe -> . CLASS ID extension LKEY conj_var conj_metodos RKEY

    $end            reduce using rule 1 (prog -> main conj_classes .)
    CLASS           shift and go to state 8

    classe                         shift and go to state 9

state 7

    (2) main -> CLASS ID LKEY . PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    PUBLIC          shift and go to state 10


state 8

    (5) classe -> CLASS . ID extension LKEY conj_var conj_metodos RKEY

    ID              shift and go to state 11


state 9

    (4) conj_classes -> conj_classes classe .

    CLASS           reduce using rule 4 (conj_classes -> conj_classes classe .)
    $end            reduce using rule 4 (conj_classes -> conj_classes classe .)


state 10

    (2) main -> CLASS ID LKEY PUBLIC . STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    STATIC          shift and go to state 12


state 11

    (5) classe -> CLASS ID . extension LKEY conj_var conj_metodos RKEY
    (6) extension -> . empty
    (7) extension -> . EXTENDS ID
    (71) empty -> .

    EXTENDS         shift and go to state 15
    LKEY            reduce using rule 71 (empty -> .)

    extension                      shift and go to state 14
    empty                          shift and go to state 13

state 12

    (2) main -> CLASS ID LKEY PUBLIC STATIC . VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    VOID            shift and go to state 16


state 13

    (6) extension -> empty .

    LKEY            reduce using rule 6 (extension -> empty .)


state 14

    (5) classe -> CLASS ID extension . LKEY conj_var conj_metodos RKEY

    LKEY            shift and go to state 17


state 15

    (7) extension -> EXTENDS . ID

    ID              shift and go to state 18


state 16

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID . MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    MAIN            shift and go to state 19


state 17

    (5) classe -> CLASS ID extension LKEY . conj_var conj_metodos RKEY
    (8) conj_var -> . empty
    (9) conj_var -> . conj_var var
    (71) empty -> .

    INT             reduce using rule 71 (empty -> .)
    BOOLEAN         reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    RKEY            reduce using rule 71 (empty -> .)
    PUBLIC          reduce using rule 71 (empty -> .)

    conj_var                       shift and go to state 21
    empty                          shift and go to state 20

state 18

    (7) extension -> EXTENDS ID .

    LKEY            reduce using rule 7 (extension -> EXTENDS ID .)


state 19

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN . LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LPAREN          shift and go to state 22


state 20

    (8) conj_var -> empty .

    INT             reduce using rule 8 (conj_var -> empty .)
    BOOLEAN         reduce using rule 8 (conj_var -> empty .)
    ID              reduce using rule 8 (conj_var -> empty .)
    RKEY            reduce using rule 8 (conj_var -> empty .)
    PUBLIC          reduce using rule 8 (conj_var -> empty .)
    RETURN          reduce using rule 8 (conj_var -> empty .)
    LKEY            reduce using rule 8 (conj_var -> empty .)
    IF              reduce using rule 8 (conj_var -> empty .)
    WHILE           reduce using rule 8 (conj_var -> empty .)
    SYSTEMOUTPRINTLN reduce using rule 8 (conj_var -> empty .)


state 21

    (5) classe -> CLASS ID extension LKEY conj_var . conj_metodos RKEY
    (9) conj_var -> conj_var . var
    (10) conj_metodos -> . empty
    (11) conj_metodos -> . conj_metodos metodo
    (12) var -> . tipo ID SEMICOLON
    (71) empty -> .
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    RKEY            reduce using rule 71 (empty -> .)
    PUBLIC          reduce using rule 71 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 23
    ID              shift and go to state 24

    empty                          shift and go to state 29
    tipo                           shift and go to state 28
    conj_metodos                   shift and go to state 27
    var                            shift and go to state 25

state 22

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN . STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    STRING          shift and go to state 30


state 23

    (22) tipo -> BOOLEAN .

    ID              reduce using rule 22 (tipo -> BOOLEAN .)


state 24

    (24) tipo -> ID .

    ID              reduce using rule 24 (tipo -> ID .)


state 25

    (9) conj_var -> conj_var var .

    INT             reduce using rule 9 (conj_var -> conj_var var .)
    BOOLEAN         reduce using rule 9 (conj_var -> conj_var var .)
    ID              reduce using rule 9 (conj_var -> conj_var var .)
    RKEY            reduce using rule 9 (conj_var -> conj_var var .)
    PUBLIC          reduce using rule 9 (conj_var -> conj_var var .)
    RETURN          reduce using rule 9 (conj_var -> conj_var var .)
    LKEY            reduce using rule 9 (conj_var -> conj_var var .)
    IF              reduce using rule 9 (conj_var -> conj_var var .)
    WHILE           reduce using rule 9 (conj_var -> conj_var var .)
    SYSTEMOUTPRINTLN reduce using rule 9 (conj_var -> conj_var var .)


state 26

    (21) tipo -> INT . LBRACKET RBRACKET
    (23) tipo -> INT .

    LBRACKET        shift and go to state 31
    ID              reduce using rule 23 (tipo -> INT .)


state 27

    (5) classe -> CLASS ID extension LKEY conj_var conj_metodos . RKEY
    (11) conj_metodos -> conj_metodos . metodo
    (13) metodo -> . PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    RKEY            shift and go to state 34
    PUBLIC          shift and go to state 33

    metodo                         shift and go to state 32

state 28

    (12) var -> tipo . ID SEMICOLON

    ID              shift and go to state 35


state 29

    (10) conj_metodos -> empty .

    RKEY            reduce using rule 10 (conj_metodos -> empty .)
    PUBLIC          reduce using rule 10 (conj_metodos -> empty .)


state 30

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING . LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    LBRACKET        shift and go to state 36


state 31

    (21) tipo -> INT LBRACKET . RBRACKET

    RBRACKET        shift and go to state 37


state 32

    (11) conj_metodos -> conj_metodos metodo .

    RKEY            reduce using rule 11 (conj_metodos -> conj_metodos metodo .)
    PUBLIC          reduce using rule 11 (conj_metodos -> conj_metodos metodo .)


state 33

    (13) metodo -> PUBLIC . tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 26
    BOOLEAN         shift and go to state 23
    ID              shift and go to state 24

    tipo                           shift and go to state 38

state 34

    (5) classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .

    CLASS           reduce using rule 5 (classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .)
    $end            reduce using rule 5 (classe -> CLASS ID extension LKEY conj_var conj_metodos RKEY .)


state 35

    (12) var -> tipo ID . SEMICOLON

    SEMICOLON       shift and go to state 39


state 36

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET . RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY

    RBRACKET        shift and go to state 40


state 37

    (21) tipo -> INT LBRACKET RBRACKET .

    ID              reduce using rule 21 (tipo -> INT LBRACKET RBRACKET .)


state 38

    (13) metodo -> PUBLIC tipo . ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    ID              shift and go to state 41


state 39

    (12) var -> tipo ID SEMICOLON .

    INT             reduce using rule 12 (var -> tipo ID SEMICOLON .)
    BOOLEAN         reduce using rule 12 (var -> tipo ID SEMICOLON .)
    ID              reduce using rule 12 (var -> tipo ID SEMICOLON .)
    RKEY            reduce using rule 12 (var -> tipo ID SEMICOLON .)
    PUBLIC          reduce using rule 12 (var -> tipo ID SEMICOLON .)
    RETURN          reduce using rule 12 (var -> tipo ID SEMICOLON .)
    LKEY            reduce using rule 12 (var -> tipo ID SEMICOLON .)
    IF              reduce using rule 12 (var -> tipo ID SEMICOLON .)
    WHILE           reduce using rule 12 (var -> tipo ID SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 12 (var -> tipo ID SEMICOLON .)


state 40

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET . ID RPAREN LKEY cmd1 RKEY RKEY

    ID              shift and go to state 42


state 41

    (13) metodo -> PUBLIC tipo ID . LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    LPAREN          shift and go to state 43


state 42

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID . RPAREN LKEY cmd1 RKEY RKEY

    RPAREN          shift and go to state 44


state 43

    (13) metodo -> PUBLIC tipo ID LPAREN . params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (16) params -> . empty
    (17) params -> . conj_params
    (71) empty -> .
    (18) conj_params -> . tipo ID mais_param
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    RPAREN          reduce using rule 71 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 23
    ID              shift and go to state 24

    empty                          shift and go to state 45
    conj_params                    shift and go to state 48
    params                         shift and go to state 46
    tipo                           shift and go to state 47

state 44

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN . LKEY cmd1 RKEY RKEY

    LKEY            shift and go to state 49


state 45

    (16) params -> empty .

    RPAREN          reduce using rule 16 (params -> empty .)


state 46

    (13) metodo -> PUBLIC tipo ID LPAREN params . RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    RPAREN          shift and go to state 50


state 47

    (18) conj_params -> tipo . ID mais_param

    ID              shift and go to state 51


state 48

    (17) params -> conj_params .

    RPAREN          reduce using rule 17 (params -> conj_params .)


state 49

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY . cmd1 RKEY RKEY
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 53

state 50

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN . LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY

    LKEY            shift and go to state 58


state 51

    (18) conj_params -> tipo ID . mais_param
    (19) mais_param -> . empty
    (20) mais_param -> . mais_param COLON tipo ID
    (71) empty -> .

    COLON           reduce using rule 71 (empty -> .)
    RPAREN          reduce using rule 71 (empty -> .)

    mais_param                     shift and go to state 59
    empty                          shift and go to state 60

state 52

    (26) cmd1 -> IF . LPAREN exp RPAREN cmd1
    (27) cmd1 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd1

    LPAREN          shift and go to state 61


state 53

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 . RKEY RKEY

    RKEY            shift and go to state 62


state 54

    (25) cmd1 -> LKEY . conj_cmd RKEY
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (71) empty -> .

    RKEY            reduce using rule 71 (empty -> .)
    LKEY            reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)

    empty                          shift and go to state 63
    conj_cmd                       shift and go to state 64

state 55

    (29) cmd1 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 65


state 56

    (30) cmd1 -> ID . ATTR exp SEMICOLON
    (31) cmd1 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON

    ATTR            shift and go to state 66
    LBRACKET        shift and go to state 67


state 57

    (28) cmd1 -> WHILE . LPAREN exp RPAREN cmd1

    LPAREN          shift and go to state 68


state 58

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY . conj_var conj_cmd RETURN exp SEMICOLON RKEY
    (8) conj_var -> . empty
    (9) conj_var -> . conj_var var
    (71) empty -> .

    INT             reduce using rule 71 (empty -> .)
    BOOLEAN         reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)
    RETURN          reduce using rule 71 (empty -> .)
    LKEY            reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 71 (empty -> .)

    empty                          shift and go to state 20
    conj_var                       shift and go to state 69

state 59

    (18) conj_params -> tipo ID mais_param .
    (20) mais_param -> mais_param . COLON tipo ID

    RPAREN          reduce using rule 18 (conj_params -> tipo ID mais_param .)
    COLON           shift and go to state 70


state 60

    (19) mais_param -> empty .

    COLON           reduce using rule 19 (mais_param -> empty .)
    RPAREN          reduce using rule 19 (mais_param -> empty .)


state 61

    (26) cmd1 -> IF LPAREN . exp RPAREN cmd1
    (27) cmd1 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd1
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 76
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 62

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY . RKEY

    RKEY            shift and go to state 87


state 63

    (14) conj_cmd -> empty .

    RKEY            reduce using rule 14 (conj_cmd -> empty .)
    LKEY            reduce using rule 14 (conj_cmd -> empty .)
    IF              reduce using rule 14 (conj_cmd -> empty .)
    WHILE           reduce using rule 14 (conj_cmd -> empty .)
    SYSTEMOUTPRINTLN reduce using rule 14 (conj_cmd -> empty .)
    ID              reduce using rule 14 (conj_cmd -> empty .)
    RETURN          reduce using rule 14 (conj_cmd -> empty .)


state 64

    (25) cmd1 -> LKEY conj_cmd . RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RKEY            shift and go to state 89
    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 88

state 65

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 90
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 66

    (30) cmd1 -> ID ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 91
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 67

    (31) cmd1 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 92
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 68

    (28) cmd1 -> WHILE LPAREN . exp RPAREN cmd1
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 93
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 69

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var . conj_cmd RETURN exp SEMICOLON RKEY
    (9) conj_var -> conj_var . var
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (12) var -> . tipo ID SEMICOLON
    (71) empty -> .
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

  ! shift/reduce conflict for ID resolved as shift
    RETURN          reduce using rule 71 (empty -> .)
    LKEY            reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 71 (empty -> .)
    INT             shift and go to state 26
    BOOLEAN         shift and go to state 23
    ID              shift and go to state 24

  ! ID              [ reduce using rule 71 (empty -> .) ]

    empty                          shift and go to state 63
    var                            shift and go to state 25
    conj_cmd                       shift and go to state 94
    tipo                           shift and go to state 28

state 70

    (20) mais_param -> mais_param COLON . tipo ID
    (21) tipo -> . INT LBRACKET RBRACKET
    (22) tipo -> . BOOLEAN
    (23) tipo -> . INT
    (24) tipo -> . ID

    INT             shift and go to state 26
    BOOLEAN         shift and go to state 23
    ID              shift and go to state 24

    tipo                           shift and go to state 95

state 71

    (55) sexp -> NEW . INT LBRACKET exp RBRACKET
    (63) pexp -> NEW . ID LPAREN RPAREN

    INT             shift and go to state 97
    ID              shift and go to state 96


state 72

    (48) mexp -> sexp .

    TIMES           reduce using rule 48 (mexp -> sexp .)
    PLUS            reduce using rule 48 (mexp -> sexp .)
    MINUS           reduce using rule 48 (mexp -> sexp .)
    LTHAN           reduce using rule 48 (mexp -> sexp .)
    EQUALS          reduce using rule 48 (mexp -> sexp .)
    NEQUALS         reduce using rule 48 (mexp -> sexp .)
    RBRACKET        reduce using rule 48 (mexp -> sexp .)
    AND             reduce using rule 48 (mexp -> sexp .)
    RPAREN          reduce using rule 48 (mexp -> sexp .)
    SEMICOLON       reduce using rule 48 (mexp -> sexp .)


state 73

    (52) sexp -> FALSE .

    TIMES           reduce using rule 52 (sexp -> FALSE .)
    PLUS            reduce using rule 52 (sexp -> FALSE .)
    MINUS           reduce using rule 52 (sexp -> FALSE .)
    LTHAN           reduce using rule 52 (sexp -> FALSE .)
    EQUALS          reduce using rule 52 (sexp -> FALSE .)
    NEQUALS         reduce using rule 52 (sexp -> FALSE .)
    RPAREN          reduce using rule 52 (sexp -> FALSE .)
    AND             reduce using rule 52 (sexp -> FALSE .)
    SEMICOLON       reduce using rule 52 (sexp -> FALSE .)
    RBRACKET        reduce using rule 52 (sexp -> FALSE .)


state 74

    (46) aexp -> mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 46 (aexp -> mexp .)
    MINUS           reduce using rule 46 (aexp -> mexp .)
    LTHAN           reduce using rule 46 (aexp -> mexp .)
    EQUALS          reduce using rule 46 (aexp -> mexp .)
    NEQUALS         reduce using rule 46 (aexp -> mexp .)
    RPAREN          reduce using rule 46 (aexp -> mexp .)
    AND             reduce using rule 46 (aexp -> mexp .)
    SEMICOLON       reduce using rule 46 (aexp -> mexp .)
    RBRACKET        reduce using rule 46 (aexp -> mexp .)
    TIMES           shift and go to state 98


state 75

    (61) pexp -> THIS .

    DOT             reduce using rule 61 (pexp -> THIS .)
    LBRACKET        reduce using rule 61 (pexp -> THIS .)
    TIMES           reduce using rule 61 (pexp -> THIS .)
    PLUS            reduce using rule 61 (pexp -> THIS .)
    MINUS           reduce using rule 61 (pexp -> THIS .)
    LTHAN           reduce using rule 61 (pexp -> THIS .)
    EQUALS          reduce using rule 61 (pexp -> THIS .)
    NEQUALS         reduce using rule 61 (pexp -> THIS .)
    RPAREN          reduce using rule 61 (pexp -> THIS .)
    AND             reduce using rule 61 (pexp -> THIS .)
    SEMICOLON       reduce using rule 61 (pexp -> THIS .)
    RBRACKET        reduce using rule 61 (pexp -> THIS .)


state 76

    (26) cmd1 -> IF LPAREN exp . RPAREN cmd1
    (27) cmd1 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd1
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 100
    AND             shift and go to state 99


state 77

    (53) sexp -> NUMBER .

    TIMES           reduce using rule 53 (sexp -> NUMBER .)
    PLUS            reduce using rule 53 (sexp -> NUMBER .)
    MINUS           reduce using rule 53 (sexp -> NUMBER .)
    LTHAN           reduce using rule 53 (sexp -> NUMBER .)
    EQUALS          reduce using rule 53 (sexp -> NUMBER .)
    NEQUALS         reduce using rule 53 (sexp -> NUMBER .)
    RPAREN          reduce using rule 53 (sexp -> NUMBER .)
    AND             reduce using rule 53 (sexp -> NUMBER .)
    SEMICOLON       reduce using rule 53 (sexp -> NUMBER .)
    RBRACKET        reduce using rule 53 (sexp -> NUMBER .)


state 78

    (60) pexp -> ID .

    DOT             reduce using rule 60 (pexp -> ID .)
    LBRACKET        reduce using rule 60 (pexp -> ID .)
    TIMES           reduce using rule 60 (pexp -> ID .)
    PLUS            reduce using rule 60 (pexp -> ID .)
    MINUS           reduce using rule 60 (pexp -> ID .)
    LTHAN           reduce using rule 60 (pexp -> ID .)
    EQUALS          reduce using rule 60 (pexp -> ID .)
    NEQUALS         reduce using rule 60 (pexp -> ID .)
    RPAREN          reduce using rule 60 (pexp -> ID .)
    AND             reduce using rule 60 (pexp -> ID .)
    SEMICOLON       reduce using rule 60 (pexp -> ID .)
    RBRACKET        reduce using rule 60 (pexp -> ID .)


state 79

    (54) sexp -> NULL .

    TIMES           reduce using rule 54 (sexp -> NULL .)
    PLUS            reduce using rule 54 (sexp -> NULL .)
    MINUS           reduce using rule 54 (sexp -> NULL .)
    LTHAN           reduce using rule 54 (sexp -> NULL .)
    EQUALS          reduce using rule 54 (sexp -> NULL .)
    NEQUALS         reduce using rule 54 (sexp -> NULL .)
    RPAREN          reduce using rule 54 (sexp -> NULL .)
    AND             reduce using rule 54 (sexp -> NULL .)
    SEMICOLON       reduce using rule 54 (sexp -> NULL .)
    RBRACKET        reduce using rule 54 (sexp -> NULL .)


state 80

    (49) sexp -> NOT . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    pexp                           shift and go to state 85
    sexp                           shift and go to state 101

state 81

    (62) pexp -> LPAREN . exp RPAREN
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 102
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 82

    (51) sexp -> TRUE .

    TIMES           reduce using rule 51 (sexp -> TRUE .)
    PLUS            reduce using rule 51 (sexp -> TRUE .)
    MINUS           reduce using rule 51 (sexp -> TRUE .)
    LTHAN           reduce using rule 51 (sexp -> TRUE .)
    EQUALS          reduce using rule 51 (sexp -> TRUE .)
    NEQUALS         reduce using rule 51 (sexp -> TRUE .)
    RPAREN          reduce using rule 51 (sexp -> TRUE .)
    AND             reduce using rule 51 (sexp -> TRUE .)
    SEMICOLON       reduce using rule 51 (sexp -> TRUE .)
    RBRACKET        reduce using rule 51 (sexp -> TRUE .)


state 83

    (39) exp -> rexp .
    (40) rexp -> rexp . LTHAN aexp
    (41) rexp -> rexp . EQUALS aexp
    (42) rexp -> rexp . NEQUALS aexp

    RPAREN          reduce using rule 39 (exp -> rexp .)
    AND             reduce using rule 39 (exp -> rexp .)
    SEMICOLON       reduce using rule 39 (exp -> rexp .)
    RBRACKET        reduce using rule 39 (exp -> rexp .)
    LTHAN           shift and go to state 105
    EQUALS          shift and go to state 103
    NEQUALS         shift and go to state 104


state 84

    (50) sexp -> MINUS . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    pexp                           shift and go to state 85
    sexp                           shift and go to state 106

state 85

    (57) sexp -> pexp . DOT LENGTH
    (58) sexp -> pexp . LBRACKET exp RBRACKET
    (59) sexp -> pexp .
    (64) pexp -> pexp . DOT ID
    (65) pexp -> pexp . DOT ID LPAREN option_exps RPAREN

    DOT             shift and go to state 107
    LBRACKET        shift and go to state 108
    TIMES           reduce using rule 59 (sexp -> pexp .)
    PLUS            reduce using rule 59 (sexp -> pexp .)
    MINUS           reduce using rule 59 (sexp -> pexp .)
    LTHAN           reduce using rule 59 (sexp -> pexp .)
    EQUALS          reduce using rule 59 (sexp -> pexp .)
    NEQUALS         reduce using rule 59 (sexp -> pexp .)
    RPAREN          reduce using rule 59 (sexp -> pexp .)
    AND             reduce using rule 59 (sexp -> pexp .)
    SEMICOLON       reduce using rule 59 (sexp -> pexp .)
    RBRACKET        reduce using rule 59 (sexp -> pexp .)


state 86

    (43) rexp -> aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 43 (rexp -> aexp .)
    EQUALS          reduce using rule 43 (rexp -> aexp .)
    NEQUALS         reduce using rule 43 (rexp -> aexp .)
    RBRACKET        reduce using rule 43 (rexp -> aexp .)
    AND             reduce using rule 43 (rexp -> aexp .)
    SEMICOLON       reduce using rule 43 (rexp -> aexp .)
    RPAREN          reduce using rule 43 (rexp -> aexp .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110


state 87

    (2) main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .

    CLASS           reduce using rule 2 (main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .)
    $end            reduce using rule 2 (main -> CLASS ID LKEY PUBLIC STATIC VOID MAIN LPAREN STRING LBRACKET RBRACKET ID RPAREN LKEY cmd1 RKEY RKEY .)


state 88

    (15) conj_cmd -> conj_cmd cmd1 .

    RKEY            reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    LKEY            reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    IF              reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    WHILE           reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    ID              reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)
    RETURN          reduce using rule 15 (conj_cmd -> conj_cmd cmd1 .)


state 89

    (25) cmd1 -> LKEY conj_cmd RKEY .

    RETURN          reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    LKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    IF              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    WHILE           reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    SYSTEMOUTPRINTLN reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ID              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    RKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)


state 90

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 111
    AND             shift and go to state 99


state 91

    (30) cmd1 -> ID ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 112
    AND             shift and go to state 99


state 92

    (31) cmd1 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 113
    AND             shift and go to state 99


state 93

    (28) cmd1 -> WHILE LPAREN exp . RPAREN cmd1
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 114
    AND             shift and go to state 99


state 94

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd . RETURN exp SEMICOLON RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RETURN          shift and go to state 115
    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 88

state 95

    (20) mais_param -> mais_param COLON tipo . ID

    ID              shift and go to state 116


state 96

    (63) pexp -> NEW ID . LPAREN RPAREN

    LPAREN          shift and go to state 117


state 97

    (55) sexp -> NEW INT . LBRACKET exp RBRACKET

    LBRACKET        shift and go to state 118


state 98

    (47) mexp -> mexp TIMES . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    pexp                           shift and go to state 85
    sexp                           shift and go to state 119

state 99

    (38) exp -> exp AND . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 120

state 100

    (26) cmd1 -> IF LPAREN exp RPAREN . cmd1
    (27) cmd1 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 125
    IF              shift and go to state 121
    WHILE           shift and go to state 124
    SYSTEMOUTPRINTLN shift and go to state 127
    ID              shift and go to state 123

    cmd2                           shift and go to state 126
    cmd1                           shift and go to state 122

state 101

    (49) sexp -> NOT sexp .

    TIMES           reduce using rule 49 (sexp -> NOT sexp .)
    PLUS            reduce using rule 49 (sexp -> NOT sexp .)
    MINUS           reduce using rule 49 (sexp -> NOT sexp .)
    LTHAN           reduce using rule 49 (sexp -> NOT sexp .)
    EQUALS          reduce using rule 49 (sexp -> NOT sexp .)
    NEQUALS         reduce using rule 49 (sexp -> NOT sexp .)
    RPAREN          reduce using rule 49 (sexp -> NOT sexp .)
    AND             reduce using rule 49 (sexp -> NOT sexp .)
    SEMICOLON       reduce using rule 49 (sexp -> NOT sexp .)
    RBRACKET        reduce using rule 49 (sexp -> NOT sexp .)


state 102

    (62) pexp -> LPAREN exp . RPAREN
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 128
    AND             shift and go to state 99


state 103

    (41) rexp -> rexp EQUALS . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    aexp                           shift and go to state 129
    mexp                           shift and go to state 74

state 104

    (42) rexp -> rexp NEQUALS . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    aexp                           shift and go to state 130
    mexp                           shift and go to state 74

state 105

    (40) rexp -> rexp LTHAN . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    aexp                           shift and go to state 131
    mexp                           shift and go to state 74

state 106

    (50) sexp -> MINUS sexp .

    TIMES           reduce using rule 50 (sexp -> MINUS sexp .)
    PLUS            reduce using rule 50 (sexp -> MINUS sexp .)
    MINUS           reduce using rule 50 (sexp -> MINUS sexp .)
    LTHAN           reduce using rule 50 (sexp -> MINUS sexp .)
    EQUALS          reduce using rule 50 (sexp -> MINUS sexp .)
    NEQUALS         reduce using rule 50 (sexp -> MINUS sexp .)
    RPAREN          reduce using rule 50 (sexp -> MINUS sexp .)
    AND             reduce using rule 50 (sexp -> MINUS sexp .)
    SEMICOLON       reduce using rule 50 (sexp -> MINUS sexp .)
    RBRACKET        reduce using rule 50 (sexp -> MINUS sexp .)


state 107

    (57) sexp -> pexp DOT . LENGTH
    (64) pexp -> pexp DOT . ID
    (65) pexp -> pexp DOT . ID LPAREN option_exps RPAREN

    LENGTH          shift and go to state 133
    ID              shift and go to state 132


state 108

    (58) sexp -> pexp LBRACKET . exp RBRACKET
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 134
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 109

    (44) aexp -> aexp PLUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    mexp                           shift and go to state 135

state 110

    (45) aexp -> aexp MINUS . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    mexp                           shift and go to state 136

state 111

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 137


state 112

    (30) cmd1 -> ID ATTR exp SEMICOLON .

    RETURN          reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    LKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    IF              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    WHILE           reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ID              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    RKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)


state 113

    (31) cmd1 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON

    ATTR            shift and go to state 138


state 114

    (28) cmd1 -> WHILE LPAREN exp RPAREN . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 139

state 115

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN . exp SEMICOLON RKEY
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83
    pexp                           shift and go to state 85
    aexp                           shift and go to state 86
    exp                            shift and go to state 140

state 116

    (20) mais_param -> mais_param COLON tipo ID .

    COLON           reduce using rule 20 (mais_param -> mais_param COLON tipo ID .)
    RPAREN          reduce using rule 20 (mais_param -> mais_param COLON tipo ID .)


state 117

    (63) pexp -> NEW ID LPAREN . RPAREN

    RPAREN          shift and go to state 141


state 118

    (55) sexp -> NEW INT LBRACKET . exp RBRACKET
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 142
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 119

    (47) mexp -> mexp TIMES sexp .

    TIMES           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    PLUS            reduce using rule 47 (mexp -> mexp TIMES sexp .)
    MINUS           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    LTHAN           reduce using rule 47 (mexp -> mexp TIMES sexp .)
    EQUALS          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    NEQUALS         reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RBRACKET        reduce using rule 47 (mexp -> mexp TIMES sexp .)
    AND             reduce using rule 47 (mexp -> mexp TIMES sexp .)
    RPAREN          reduce using rule 47 (mexp -> mexp TIMES sexp .)
    SEMICOLON       reduce using rule 47 (mexp -> mexp TIMES sexp .)


state 120

    (38) exp -> exp AND rexp .
    (40) rexp -> rexp . LTHAN aexp
    (41) rexp -> rexp . EQUALS aexp
    (42) rexp -> rexp . NEQUALS aexp

    RPAREN          reduce using rule 38 (exp -> exp AND rexp .)
    AND             reduce using rule 38 (exp -> exp AND rexp .)
    SEMICOLON       reduce using rule 38 (exp -> exp AND rexp .)
    RBRACKET        reduce using rule 38 (exp -> exp AND rexp .)
    LTHAN           shift and go to state 105
    EQUALS          shift and go to state 103
    NEQUALS         shift and go to state 104


state 121

    (26) cmd1 -> IF . LPAREN exp RPAREN cmd1
    (27) cmd1 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF . LPAREN exp RPAREN cmd2 ELSE cmd2

    LPAREN          shift and go to state 143


state 122

    (26) cmd1 -> IF LPAREN exp RPAREN cmd1 .

    RKEY            reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    LKEY            reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    IF              reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    WHILE           reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    ID              reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)
    RETURN          reduce using rule 26 (cmd1 -> IF LPAREN exp RPAREN cmd1 .)


state 123

    (30) cmd1 -> ID . ATTR exp SEMICOLON
    (31) cmd1 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (36) cmd2 -> ID . ATTR exp SEMICOLON
    (37) cmd2 -> ID . LBRACKET exp RBRACKET ATTR exp SEMICOLON

    ATTR            shift and go to state 144
    LBRACKET        shift and go to state 145


state 124

    (28) cmd1 -> WHILE . LPAREN exp RPAREN cmd1
    (34) cmd2 -> WHILE . LPAREN exp RPAREN cmd2

    LPAREN          shift and go to state 146


state 125

    (25) cmd1 -> LKEY . conj_cmd RKEY
    (32) cmd2 -> LKEY . conj_cmd RKEY
    (14) conj_cmd -> . empty
    (15) conj_cmd -> . conj_cmd cmd1
    (71) empty -> .

    RKEY            reduce using rule 71 (empty -> .)
    LKEY            reduce using rule 71 (empty -> .)
    IF              reduce using rule 71 (empty -> .)
    WHILE           reduce using rule 71 (empty -> .)
    SYSTEMOUTPRINTLN reduce using rule 71 (empty -> .)
    ID              reduce using rule 71 (empty -> .)

    empty                          shift and go to state 63
    conj_cmd                       shift and go to state 147

state 126

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd1

    ELSE            shift and go to state 148


state 127

    (29) cmd1 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 149


state 128

    (62) pexp -> LPAREN exp RPAREN .

    DOT             reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    LBRACKET        reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    TIMES           reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    LTHAN           reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    EQUALS          reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    NEQUALS         reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 62 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 62 (pexp -> LPAREN exp RPAREN .)


state 129

    (41) rexp -> rexp EQUALS aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    EQUALS          reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    NEQUALS         reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    RBRACKET        reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    AND             reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    SEMICOLON       reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    RPAREN          reduce using rule 41 (rexp -> rexp EQUALS aexp .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110


state 130

    (42) rexp -> rexp NEQUALS aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    EQUALS          reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    NEQUALS         reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    RBRACKET        reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    AND             reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    SEMICOLON       reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    RPAREN          reduce using rule 42 (rexp -> rexp NEQUALS aexp .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110


state 131

    (40) rexp -> rexp LTHAN aexp .
    (44) aexp -> aexp . PLUS mexp
    (45) aexp -> aexp . MINUS mexp

    LTHAN           reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    EQUALS          reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    NEQUALS         reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    RBRACKET        reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    AND             reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    SEMICOLON       reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    RPAREN          reduce using rule 40 (rexp -> rexp LTHAN aexp .)
    PLUS            shift and go to state 109
    MINUS           shift and go to state 110


state 132

    (64) pexp -> pexp DOT ID .
    (65) pexp -> pexp DOT ID . LPAREN option_exps RPAREN

    DOT             reduce using rule 64 (pexp -> pexp DOT ID .)
    LBRACKET        reduce using rule 64 (pexp -> pexp DOT ID .)
    TIMES           reduce using rule 64 (pexp -> pexp DOT ID .)
    PLUS            reduce using rule 64 (pexp -> pexp DOT ID .)
    MINUS           reduce using rule 64 (pexp -> pexp DOT ID .)
    LTHAN           reduce using rule 64 (pexp -> pexp DOT ID .)
    EQUALS          reduce using rule 64 (pexp -> pexp DOT ID .)
    NEQUALS         reduce using rule 64 (pexp -> pexp DOT ID .)
    RPAREN          reduce using rule 64 (pexp -> pexp DOT ID .)
    AND             reduce using rule 64 (pexp -> pexp DOT ID .)
    SEMICOLON       reduce using rule 64 (pexp -> pexp DOT ID .)
    RBRACKET        reduce using rule 64 (pexp -> pexp DOT ID .)
    LPAREN          shift and go to state 150


state 133

    (57) sexp -> pexp DOT LENGTH .

    TIMES           reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    PLUS            reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    MINUS           reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    LTHAN           reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    EQUALS          reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    NEQUALS         reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    RPAREN          reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    AND             reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    SEMICOLON       reduce using rule 57 (sexp -> pexp DOT LENGTH .)
    RBRACKET        reduce using rule 57 (sexp -> pexp DOT LENGTH .)


state 134

    (58) sexp -> pexp LBRACKET exp . RBRACKET
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 151
    AND             shift and go to state 99


state 135

    (44) aexp -> aexp PLUS mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 44 (aexp -> aexp PLUS mexp .)
    MINUS           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    LTHAN           reduce using rule 44 (aexp -> aexp PLUS mexp .)
    EQUALS          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    NEQUALS         reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RPAREN          reduce using rule 44 (aexp -> aexp PLUS mexp .)
    AND             reduce using rule 44 (aexp -> aexp PLUS mexp .)
    SEMICOLON       reduce using rule 44 (aexp -> aexp PLUS mexp .)
    RBRACKET        reduce using rule 44 (aexp -> aexp PLUS mexp .)
    TIMES           shift and go to state 98


state 136

    (45) aexp -> aexp MINUS mexp .
    (47) mexp -> mexp . TIMES sexp

    PLUS            reduce using rule 45 (aexp -> aexp MINUS mexp .)
    MINUS           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    LTHAN           reduce using rule 45 (aexp -> aexp MINUS mexp .)
    EQUALS          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    NEQUALS         reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RPAREN          reduce using rule 45 (aexp -> aexp MINUS mexp .)
    AND             reduce using rule 45 (aexp -> aexp MINUS mexp .)
    SEMICOLON       reduce using rule 45 (aexp -> aexp MINUS mexp .)
    RBRACKET        reduce using rule 45 (aexp -> aexp MINUS mexp .)
    TIMES           shift and go to state 98


state 137

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .

    RETURN          reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    LKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    RKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)


state 138

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 152
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 139

    (28) cmd1 -> WHILE LPAREN exp RPAREN cmd1 .

    RKEY            reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    LKEY            reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    IF              reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    WHILE           reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    ID              reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)
    RETURN          reduce using rule 28 (cmd1 -> WHILE LPAREN exp RPAREN cmd1 .)


state 140

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp . SEMICOLON RKEY
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 153
    AND             shift and go to state 99


state 141

    (63) pexp -> NEW ID LPAREN RPAREN .

    DOT             reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    LBRACKET        reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    TIMES           reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    PLUS            reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    MINUS           reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    LTHAN           reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    EQUALS          reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    NEQUALS         reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    RPAREN          reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    AND             reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    SEMICOLON       reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 63 (pexp -> NEW ID LPAREN RPAREN .)


state 142

    (55) sexp -> NEW INT LBRACKET exp . RBRACKET
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 154
    AND             shift and go to state 99


state 143

    (26) cmd1 -> IF LPAREN . exp RPAREN cmd1
    (27) cmd1 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN . exp RPAREN cmd2 ELSE cmd2
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 155
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 144

    (30) cmd1 -> ID ATTR . exp SEMICOLON
    (36) cmd2 -> ID ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 156
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 145

    (31) cmd1 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET . exp RBRACKET ATTR exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RBRACKET        reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 157
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 146

    (28) cmd1 -> WHILE LPAREN . exp RPAREN cmd1
    (34) cmd2 -> WHILE LPAREN . exp RPAREN cmd2
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 158
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 147

    (25) cmd1 -> LKEY conj_cmd . RKEY
    (32) cmd2 -> LKEY conj_cmd . RKEY
    (15) conj_cmd -> conj_cmd . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    RKEY            shift and go to state 159
    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 88

state 148

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd1
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 54
    IF              shift and go to state 52
    WHILE           shift and go to state 57
    SYSTEMOUTPRINTLN shift and go to state 55
    ID              shift and go to state 56

    cmd1                           shift and go to state 160

state 149

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN . exp RPAREN SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 161
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 150

    (65) pexp -> pexp DOT ID LPAREN . option_exps RPAREN
    (66) option_exps -> . empty
    (67) option_exps -> . exp
    (71) empty -> .
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 56 (sexp -> .)
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    RPAREN          reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! RPAREN          [ reduce using rule 71 (empty -> .) ]
  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    option_exps                    shift and go to state 163
    empty                          shift and go to state 164
    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 162
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 151

    (58) sexp -> pexp LBRACKET exp RBRACKET .

    TIMES           reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    LTHAN           reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    NEQUALS         reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    AND             reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 58 (sexp -> pexp LBRACKET exp RBRACKET .)


state 152

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 165
    AND             shift and go to state 99


state 153

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON . RKEY

    RKEY            shift and go to state 166


state 154

    (55) sexp -> NEW INT LBRACKET exp RBRACKET .

    TIMES           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    LTHAN           reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    NEQUALS         reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    AND             reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 55 (sexp -> NEW INT LBRACKET exp RBRACKET .)


state 155

    (26) cmd1 -> IF LPAREN exp . RPAREN cmd1
    (27) cmd1 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN exp . RPAREN cmd2 ELSE cmd2
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 167
    AND             shift and go to state 99


state 156

    (30) cmd1 -> ID ATTR exp . SEMICOLON
    (36) cmd2 -> ID ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 168
    AND             shift and go to state 99


state 157

    (31) cmd1 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp . RBRACKET ATTR exp SEMICOLON
    (38) exp -> exp . AND rexp

    RBRACKET        shift and go to state 169
    AND             shift and go to state 99


state 158

    (28) cmd1 -> WHILE LPAREN exp . RPAREN cmd1
    (34) cmd2 -> WHILE LPAREN exp . RPAREN cmd2
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 170
    AND             shift and go to state 99


state 159

    (25) cmd1 -> LKEY conj_cmd RKEY .
    (32) cmd2 -> LKEY conj_cmd RKEY .

    RKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    LKEY            reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    IF              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    WHILE           reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    SYSTEMOUTPRINTLN reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ID              reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    RETURN          reduce using rule 25 (cmd1 -> LKEY conj_cmd RKEY .)
    ELSE            reduce using rule 32 (cmd2 -> LKEY conj_cmd RKEY .)


state 160

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .

    RKEY            reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    LKEY            reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    IF              reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    WHILE           reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    SYSTEMOUTPRINTLN reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    ID              reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)
    RETURN          reduce using rule 27 (cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE cmd1 .)


state 161

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp . RPAREN SEMICOLON
    (38) exp -> exp . AND rexp

    RPAREN          shift and go to state 171
    AND             shift and go to state 99


state 162

    (67) option_exps -> exp .
    (38) exp -> exp . AND rexp

    RPAREN          reduce using rule 67 (option_exps -> exp .)
    AND             shift and go to state 99


state 163

    (65) pexp -> pexp DOT ID LPAREN option_exps . RPAREN

    RPAREN          shift and go to state 172


state 164

    (66) option_exps -> empty .

    RPAREN          reduce using rule 66 (option_exps -> empty .)


state 165

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .

    RETURN          reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    LKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    IF              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    WHILE           reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ID              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    RKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)


state 166

    (13) metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .

    RKEY            reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .)
    PUBLIC          reduce using rule 13 (metodo -> PUBLIC tipo ID LPAREN params RPAREN LKEY conj_var conj_cmd RETURN exp SEMICOLON RKEY .)


state 167

    (26) cmd1 -> IF LPAREN exp RPAREN . cmd1
    (27) cmd1 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN . cmd2 ELSE cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 125
    IF              shift and go to state 121
    WHILE           shift and go to state 124
    SYSTEMOUTPRINTLN shift and go to state 127
    ID              shift and go to state 123

    cmd2                           shift and go to state 173
    cmd1                           shift and go to state 122

state 168

    (30) cmd1 -> ID ATTR exp SEMICOLON .
    (36) cmd2 -> ID ATTR exp SEMICOLON .

    RKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    LKEY            reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    IF              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    WHILE           reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ID              reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    RETURN          reduce using rule 30 (cmd1 -> ID ATTR exp SEMICOLON .)
    ELSE            reduce using rule 36 (cmd2 -> ID ATTR exp SEMICOLON .)


state 169

    (31) cmd1 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET . ATTR exp SEMICOLON

    ATTR            shift and go to state 174


state 170

    (28) cmd1 -> WHILE LPAREN exp RPAREN . cmd1
    (34) cmd2 -> WHILE LPAREN exp RPAREN . cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 125
    IF              shift and go to state 121
    WHILE           shift and go to state 124
    SYSTEMOUTPRINTLN shift and go to state 127
    ID              shift and go to state 123

    cmd2                           shift and go to state 175
    cmd1                           shift and go to state 139

state 171

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 176


state 172

    (65) pexp -> pexp DOT ID LPAREN option_exps RPAREN .

    DOT             reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    LBRACKET        reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    TIMES           reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    PLUS            reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    MINUS           reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    LTHAN           reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    EQUALS          reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    NEQUALS         reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    RPAREN          reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    AND             reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    SEMICOLON       reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)
    RBRACKET        reduce using rule 65 (pexp -> pexp DOT ID LPAREN option_exps RPAREN .)


state 173

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 . ELSE cmd2

    ELSE            shift and go to state 177


state 174

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR . exp SEMICOLON
    (38) exp -> . exp AND rexp
    (39) exp -> . rexp
    (40) rexp -> . rexp LTHAN aexp
    (41) rexp -> . rexp EQUALS aexp
    (42) rexp -> . rexp NEQUALS aexp
    (43) rexp -> . aexp
    (44) aexp -> . aexp PLUS mexp
    (45) aexp -> . aexp MINUS mexp
    (46) aexp -> . mexp
    (47) mexp -> . mexp TIMES sexp
    (48) mexp -> . sexp
    (49) sexp -> . NOT sexp
    (50) sexp -> . MINUS sexp
    (51) sexp -> . TRUE
    (52) sexp -> . FALSE
    (53) sexp -> . NUMBER
    (54) sexp -> . NULL
    (55) sexp -> . NEW INT LBRACKET exp RBRACKET
    (56) sexp -> .
    (57) sexp -> . pexp DOT LENGTH
    (58) sexp -> . pexp LBRACKET exp RBRACKET
    (59) sexp -> . pexp
    (60) pexp -> . ID
    (61) pexp -> . THIS
    (62) pexp -> . LPAREN exp RPAREN
    (63) pexp -> . NEW ID LPAREN RPAREN
    (64) pexp -> . pexp DOT ID
    (65) pexp -> . pexp DOT ID LPAREN option_exps RPAREN

  ! shift/reduce conflict for MINUS resolved as shift
    NOT             shift and go to state 80
    MINUS           shift and go to state 84
    TRUE            shift and go to state 82
    FALSE           shift and go to state 73
    NUMBER          shift and go to state 77
    NULL            shift and go to state 79
    NEW             shift and go to state 71
    TIMES           reduce using rule 56 (sexp -> .)
    PLUS            reduce using rule 56 (sexp -> .)
    LTHAN           reduce using rule 56 (sexp -> .)
    EQUALS          reduce using rule 56 (sexp -> .)
    NEQUALS         reduce using rule 56 (sexp -> .)
    SEMICOLON       reduce using rule 56 (sexp -> .)
    AND             reduce using rule 56 (sexp -> .)
    ID              shift and go to state 78
    THIS            shift and go to state 75
    LPAREN          shift and go to state 81

  ! MINUS           [ reduce using rule 56 (sexp -> .) ]

    sexp                           shift and go to state 72
    pexp                           shift and go to state 85
    exp                            shift and go to state 178
    aexp                           shift and go to state 86
    mexp                           shift and go to state 74
    rexp                           shift and go to state 83

state 175

    (34) cmd2 -> WHILE LPAREN exp RPAREN cmd2 .

    ELSE            reduce using rule 34 (cmd2 -> WHILE LPAREN exp RPAREN cmd2 .)


state 176

    (29) cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .
    (35) cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .

    RKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    LKEY            reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 29 (cmd1 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)
    ELSE            reduce using rule 35 (cmd2 -> SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON .)


state 177

    (27) cmd1 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd1
    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE . cmd2
    (25) cmd1 -> . LKEY conj_cmd RKEY
    (26) cmd1 -> . IF LPAREN exp RPAREN cmd1
    (27) cmd1 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd1
    (28) cmd1 -> . WHILE LPAREN exp RPAREN cmd1
    (29) cmd1 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (30) cmd1 -> . ID ATTR exp SEMICOLON
    (31) cmd1 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON
    (32) cmd2 -> . LKEY conj_cmd RKEY
    (33) cmd2 -> . IF LPAREN exp RPAREN cmd2 ELSE cmd2
    (34) cmd2 -> . WHILE LPAREN exp RPAREN cmd2
    (35) cmd2 -> . SYSTEMOUTPRINTLN LPAREN exp RPAREN SEMICOLON
    (36) cmd2 -> . ID ATTR exp SEMICOLON
    (37) cmd2 -> . ID LBRACKET exp RBRACKET ATTR exp SEMICOLON

    LKEY            shift and go to state 125
    IF              shift and go to state 121
    WHILE           shift and go to state 124
    SYSTEMOUTPRINTLN shift and go to state 127
    ID              shift and go to state 123

    cmd2                           shift and go to state 179
    cmd1                           shift and go to state 160

state 178

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR exp . SEMICOLON
    (38) exp -> exp . AND rexp

    SEMICOLON       shift and go to state 180
    AND             shift and go to state 99


state 179

    (33) cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2 .

    ELSE            reduce using rule 33 (cmd2 -> IF LPAREN exp RPAREN cmd2 ELSE cmd2 .)


state 180

    (31) cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .
    (37) cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .

    RKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    LKEY            reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    IF              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    WHILE           reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    SYSTEMOUTPRINTLN reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ID              reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    RETURN          reduce using rule 31 (cmd1 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)
    ELSE            reduce using rule 37 (cmd2 -> ID LBRACKET exp RBRACKET ATTR exp SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 65 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 67 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 81 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 98 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 99 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 105 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 108 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 150 resolved using rule (sexp -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 150
