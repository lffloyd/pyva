#        GRAMÁTICA ATUALIZADA EBNF ---> BNF WITH OUR TOKENS SEM AMBIGUIDADE

#        prog -> main conj_classes
#
#        main -> CLASS ID '{' PUBLIC STATIC VOID MAIN '(' sTRING '[' ']' ID ')'
#        '{' cmd1 '}' '}'
#
#        conj_classes -> EPISILON
#        | conj_classes classe
#
#        classe -> CLASS ID extension '{' conj_var conj_metodos '}'
#
#        extension -> EPISILON 
#        | EXTENDS ID
#
#        conj_var -> EPISILON | conj_var var
#
#        conj_metodos -> EPISILON | conj_metodos metodo
#
#        var -> tipo ID ;
#
#        metodo -> PUBLIC tipo ID '(' params ')' '{' conj_var conj_cmd RETURN exp ; '}'
#
#        conj_cmd -> EPISILON 
#        | conj_cmd cmd
#
#        params -> EPISILON 
#        | conj_params
#
#        conj_params -> tipo ID mais_param
#
#        mais_param -> EPISILON
#        | mais_param , tipo ID
#
#        tipo -> INT '[' ']'
#        | BOOLEAN
#        | INT
#        | ID
#        
#        cmd1 -> '{' conj_cmd '}'
#        | IF '(' exp ')' cmd1
#        | IF '(' exp ')' cmd2 ELSE cmd1
#        | WHILE '(' exp ')' cmd1
#        | sYSTEM.OUT.PRINTLN '(' exp ')' ;
#        | ID = exp ;
#        | ID '[' exp ']' = exp ;
#
#        cmd2 -> '{' conj_cmd '}'
#        | IF '(' exp ')' cmd2 ELSE cmd2
#        | WHILE '(' exp ')' cmd2
#        | sYSTEM.OUT.PRINTLN '(' exp ')' ;
#        | ID = exp ;
#        | ID '[' exp ']' = exp ;
#          
#        exp -> exp && rexp
#        | rexp
#
#        rexp -> rexp < aexp
#        | rexp == aexp
#        | rexp != aexp
#        | aexp
#
#        aexp -> aexp + mexp
#        | aexp - mexp
#        | mexp
#
#        mexp -> mexp * sexp
#        | sexp
#
#        sexp -> ! sexp
#        | - sexp
#        | TRUE
#        | FALSE
#        | NUM
#        | NULL
#        | NEW INT '[' exp ']'
#        | pexp . LENGTH
#        | pexp '[' exp ']'
#        | pexp
#
#        pexp -> ID
#        | THIS
#        | NEW ID '(' ')'
#        | '(' exp ')'
#        | pexp . ID
#        | pexp . ID '(' option_exps ')'
#
#        option_exps -> EPISILON 
#        | exp 
#
#        exps -> exp conj_exps
#
#        conj_exps -> EPISILON | conj_exps , exp
